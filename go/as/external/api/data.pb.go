// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: as/external/api/data.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TransData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TransData) Reset() {
	*x = TransData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransData) ProtoMessage() {}

func (x *TransData) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransData.ProtoReflect.Descriptor instead.
func (*TransData) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{0}
}

func (x *TransData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TemperatureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// temp_SHT of the device.
	Temp_SHT float32 `protobuf:"fixed32,3,opt,name=Temp_SHT,proto3" json:"Temp_SHT,omitempty"`
	// hum_SHT.
	Hum_SHT float32 `protobuf:"fixed32,4,opt,name=Hum_SHT,proto3" json:"Hum_SHT,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate *timestamp.Timestamp `protobuf:"bytes,5,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	Description    string               `protobuf:"bytes,6,opt,name=description,json=Description,proto3" json:"description,omitempty"`
}

func (x *TemperatureData) Reset() {
	*x = TemperatureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperatureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureData) ProtoMessage() {}

func (x *TemperatureData) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureData.ProtoReflect.Descriptor instead.
func (*TemperatureData) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{1}
}

func (x *TemperatureData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *TemperatureData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemperatureData) GetTemp_SHT() float32 {
	if x != nil {
		return x.Temp_SHT
	}
	return 0
}

func (x *TemperatureData) GetHum_SHT() float32 {
	if x != nil {
		return x.Hum_SHT
	}
	return 0
}

func (x *TemperatureData) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

func (x *TemperatureData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service-profile ID to filter on (string formatted UUID).
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// device_type_id device type id filter
	DeviceTypeId int64 `protobuf:"varint,3,opt,name=device_type_id,json=DeviceTypeID,proto3" json:"device_type_id,omitempty"`
	// Max number of devices to return in the result-set.
	Limit     int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ListDataRequest) Reset() {
	*x = ListDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataRequest) ProtoMessage() {}

func (x *ListDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataRequest.ProtoReflect.Descriptor instead.
func (*ListDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{2}
}

func (x *ListDataRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ListDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ListDataRequest) GetDeviceTypeId() int64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *ListDataRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDataRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListDataRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices available within the result-set.
	TotalCount int64           `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result     []*DataResponse `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListDataResponse) Reset() {
	*x = ListDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataResponse) ProtoMessage() {}

func (x *ListDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataResponse.ProtoReflect.Descriptor instead.
func (*ListDataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{3}
}

func (x *ListDataResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDataResponse) GetResult() []*DataResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type DataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// temp_SHT of the device.
	AirTemperature float32 `protobuf:"fixed32,3,opt,name=air_temperature,json=Air_Temperature,proto3" json:"air_temperature,omitempty"`
	// hum_SHT.
	AirHumadity float32 `protobuf:"fixed32,4,opt,name=air_humadity,json=Air_Humadity,proto3" json:"air_humadity,omitempty"`
	// water_SOIL of the device.
	SolWater float32 `protobuf:"fixed32,5,opt,name=sol_water,json=Sol_Water,proto3" json:"sol_water,omitempty"`
	// temp_SOIL of the device.
	SolTemperature float32 `protobuf:"fixed32,6,opt,name=sol_temperature,json=Sol_Temperature,proto3" json:"sol_temperature,omitempty"`
	// conduct_SOIL of the device.
	SolConductSoil float32 `protobuf:"fixed32,7,opt,name=sol_conduct_soil,json=Sol_conduct_soil,proto3" json:"sol_conduct_soil,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate    *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	Description       string               `protobuf:"bytes,9,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	WaterStatus       int64                `protobuf:"varint,10,opt,name=water_status,json=WaterStatus,proto3" json:"water_status,omitempty"`
	WaterLeekTimes    int64                `protobuf:"varint,11,opt,name=water_leek_times,json=WaterLeekTimes,proto3" json:"water_leek_times,omitempty"`
	WaterLeekDuration int64                `protobuf:"varint,12,opt,name=water_leek_duration,json=WaterLeekDuration,proto3" json:"water_leek_duration,omitempty"`
	DoorStatus        int64                `protobuf:"varint,13,opt,name=door_status,json=DoorStatus,proto3" json:"door_status,omitempty"`
	DoorOpenTimes     int64                `protobuf:"varint,14,opt,name=door_open_times,json=DoorOpenTimes,proto3" json:"door_open_times,omitempty"`
	DoorOpenDuration  int64                `protobuf:"varint,15,opt,name=door_open_duration,json=DoorOpenDuration,proto3" json:"door_open_duration,omitempty"`
}

func (x *DataResponse) Reset() {
	*x = DataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResponse) ProtoMessage() {}

func (x *DataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResponse.ProtoReflect.Descriptor instead.
func (*DataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{4}
}

func (x *DataResponse) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *DataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataResponse) GetAirTemperature() float32 {
	if x != nil {
		return x.AirTemperature
	}
	return 0
}

func (x *DataResponse) GetAirHumadity() float32 {
	if x != nil {
		return x.AirHumadity
	}
	return 0
}

func (x *DataResponse) GetSolWater() float32 {
	if x != nil {
		return x.SolWater
	}
	return 0
}

func (x *DataResponse) GetSolTemperature() float32 {
	if x != nil {
		return x.SolTemperature
	}
	return 0
}

func (x *DataResponse) GetSolConductSoil() float32 {
	if x != nil {
		return x.SolConductSoil
	}
	return 0
}

func (x *DataResponse) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

func (x *DataResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DataResponse) GetWaterStatus() int64 {
	if x != nil {
		return x.WaterStatus
	}
	return 0
}

func (x *DataResponse) GetWaterLeekTimes() int64 {
	if x != nil {
		return x.WaterLeekTimes
	}
	return 0
}

func (x *DataResponse) GetWaterLeekDuration() int64 {
	if x != nil {
		return x.WaterLeekDuration
	}
	return 0
}

func (x *DataResponse) GetDoorStatus() int64 {
	if x != nil {
		return x.DoorStatus
	}
	return 0
}

func (x *DataResponse) GetDoorOpenTimes() int64 {
	if x != nil {
		return x.DoorOpenTimes
	}
	return 0
}

func (x *DataResponse) GetDoorOpenDuration() int64 {
	if x != nil {
		return x.DoorOpenDuration
	}
	return 0
}

type ListTemperatureDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service-profile ID to filter on (string formatted UUID).
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Max number of devices to return in the result-set.
	Limit     int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ListTemperatureDataRequest) Reset() {
	*x = ListTemperatureDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemperatureDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemperatureDataRequest) ProtoMessage() {}

func (x *ListTemperatureDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemperatureDataRequest.ProtoReflect.Descriptor instead.
func (*ListTemperatureDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{5}
}

func (x *ListTemperatureDataRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ListTemperatureDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ListTemperatureDataRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTemperatureDataRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListTemperatureDataRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListTemperatureDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result []*TemperatureData `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListTemperatureDataResponse) Reset() {
	*x = ListTemperatureDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemperatureDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemperatureDataResponse) ProtoMessage() {}

func (x *ListTemperatureDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemperatureDataResponse.ProtoReflect.Descriptor instead.
func (*ListTemperatureDataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{6}
}

func (x *ListTemperatureDataResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTemperatureDataResponse) GetResult() []*TemperatureData {
	if x != nil {
		return x.Result
	}
	return nil
}

type SoilData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// TempC_DS18B20 of the device.
	TempC_DS18B20 float32 `protobuf:"fixed32,3,opt,name=TempC_DS18B20,proto3" json:"TempC_DS18B20,omitempty"`
	// water_SOIL of the device.
	Water_SOIL float32 `protobuf:"fixed32,4,opt,name=water_SOIL,proto3" json:"water_SOIL,omitempty"`
	// temp_SOIL of the device.
	Temp_SOIL float32 `protobuf:"fixed32,5,opt,name=temp_SOIL,proto3" json:"temp_SOIL,omitempty"`
	// conduct_SOIL of the device.
	Conduct_SOIL float32 `protobuf:"fixed32,6,opt,name=conduct_SOIL,proto3" json:"conduct_SOIL,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	Description    string               `protobuf:"bytes,8,opt,name=description,json=Description,proto3" json:"description,omitempty"`
}

func (x *SoilData) Reset() {
	*x = SoilData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoilData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoilData) ProtoMessage() {}

func (x *SoilData) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoilData.ProtoReflect.Descriptor instead.
func (*SoilData) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{7}
}

func (x *SoilData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *SoilData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SoilData) GetTempC_DS18B20() float32 {
	if x != nil {
		return x.TempC_DS18B20
	}
	return 0
}

func (x *SoilData) GetWater_SOIL() float32 {
	if x != nil {
		return x.Water_SOIL
	}
	return 0
}

func (x *SoilData) GetTemp_SOIL() float32 {
	if x != nil {
		return x.Temp_SOIL
	}
	return 0
}

func (x *SoilData) GetConduct_SOIL() float32 {
	if x != nil {
		return x.Conduct_SOIL
	}
	return 0
}

func (x *SoilData) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

func (x *SoilData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListSoilDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service-profile ID to filter on (string formatted UUID).
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Max number of devices to return in the result-set.
	Limit     int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ListSoilDataRequest) Reset() {
	*x = ListSoilDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSoilDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSoilDataRequest) ProtoMessage() {}

func (x *ListSoilDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSoilDataRequest.ProtoReflect.Descriptor instead.
func (*ListSoilDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{8}
}

func (x *ListSoilDataRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ListSoilDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ListSoilDataRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSoilDataRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListSoilDataRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListSoilDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result []*SoilData `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListSoilDataResponse) Reset() {
	*x = ListSoilDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSoilDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSoilDataResponse) ProtoMessage() {}

func (x *ListSoilDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSoilDataResponse.ProtoReflect.Descriptor instead.
func (*ListSoilDataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{9}
}

func (x *ListSoilDataResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListSoilDataResponse) GetResult() []*SoilData {
	if x != nil {
		return x.Result
	}
	return nil
}

type DistanceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// distance of the device.
	Distance float32 `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
}

func (x *DistanceData) Reset() {
	*x = DistanceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistanceData) ProtoMessage() {}

func (x *DistanceData) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistanceData.ProtoReflect.Descriptor instead.
func (*DistanceData) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{10}
}

func (x *DistanceData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *DistanceData) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *DistanceData) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

type ListDistanceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Service-profile ID to filter on (string formatted UUID).
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListDistanceDataRequest) Reset() {
	*x = ListDistanceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDistanceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDistanceDataRequest) ProtoMessage() {}

func (x *ListDistanceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDistanceDataRequest.ProtoReflect.Descriptor instead.
func (*ListDistanceDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{11}
}

func (x *ListDistanceDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ListDistanceDataRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListDistanceDataRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListDistanceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result []*DistanceData `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListDistanceDataResponse) Reset() {
	*x = ListDistanceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDistanceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDistanceDataResponse) ProtoMessage() {}

func (x *ListDistanceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDistanceDataResponse.ProtoReflect.Descriptor instead.
func (*ListDistanceDataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{12}
}

func (x *ListDistanceDataResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDistanceDataResponse) GetResult() []*DistanceData {
	if x != nil {
		return x.Result
	}
	return nil
}

type TrackingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// ADDR value of device.
	ADDR string `protobuf:"bytes,2,opt,name=ADDR,proto3" json:"ADDR,omitempty"`
	// STEP value of device.
	STEP int64 `protobuf:"varint,3,opt,name=STEP,proto3" json:"STEP,omitempty"`
	// ALARM value of device.
	ALARM string `protobuf:"bytes,4,opt,name=ALARM,proto3" json:"ALARM,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate *timestamp.Timestamp `protobuf:"bytes,5,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
}

func (x *TrackingData) Reset() {
	*x = TrackingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingData) ProtoMessage() {}

func (x *TrackingData) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingData.ProtoReflect.Descriptor instead.
func (*TrackingData) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{13}
}

func (x *TrackingData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *TrackingData) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *TrackingData) GetSTEP() int64 {
	if x != nil {
		return x.STEP
	}
	return 0
}

func (x *TrackingData) GetALARM() string {
	if x != nil {
		return x.ALARM
	}
	return ""
}

func (x *TrackingData) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

type ListTrackingDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Service-profile ID to filter on (string formatted UUID).
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTrackingDataRequest) Reset() {
	*x = ListTrackingDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackingDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackingDataRequest) ProtoMessage() {}

func (x *ListTrackingDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackingDataRequest.ProtoReflect.Descriptor instead.
func (*ListTrackingDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{14}
}

func (x *ListTrackingDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ListTrackingDataRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListTrackingDataRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTrackingDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result []*TrackingData `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListTrackingDataResponse) Reset() {
	*x = ListTrackingDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackingDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackingDataResponse) ProtoMessage() {}

func (x *ListTrackingDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackingDataResponse.ProtoReflect.Descriptor instead.
func (*ListTrackingDataResponse) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{15}
}

func (x *ListTrackingDataResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTrackingDataResponse) GetResult() []*TrackingData {
	if x != nil {
		return x.Result
	}
	return nil
}

type PostTemperatureDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// temperature temperature
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// humadity humadity
	Humadity float64 `protobuf:"fixed64,3,opt,name=humadity,proto3" json:"humadity,omitempty"`
}

func (x *PostTemperatureDataRequest) Reset() {
	*x = PostTemperatureDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTemperatureDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTemperatureDataRequest) ProtoMessage() {}

func (x *PostTemperatureDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTemperatureDataRequest.ProtoReflect.Descriptor instead.
func (*PostTemperatureDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{16}
}

func (x *PostTemperatureDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *PostTemperatureDataRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *PostTemperatureDataRequest) GetHumadity() float64 {
	if x != nil {
		return x.Humadity
	}
	return 0
}

type PostSoilDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// temp_c temp_c
	TempC float64 `protobuf:"fixed64,2,opt,name=temp_c,proto3" json:"temp_c,omitempty"`
	// water_soil water_soil
	WaterSoil float64 `protobuf:"fixed64,3,opt,name=water_soil,proto3" json:"water_soil,omitempty"`
	// temp_soil temp_soil
	TempSoil float64 `protobuf:"fixed64,4,opt,name=temp_soil,proto3" json:"temp_soil,omitempty"`
	// conduct_soil conduct_soil
	ConductSoil float64 `protobuf:"fixed64,5,opt,name=conduct_soil,proto3" json:"conduct_soil,omitempty"`
}

func (x *PostSoilDataRequest) Reset() {
	*x = PostSoilDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_as_external_api_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSoilDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSoilDataRequest) ProtoMessage() {}

func (x *PostSoilDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_as_external_api_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSoilDataRequest.ProtoReflect.Descriptor instead.
func (*PostSoilDataRequest) Descriptor() ([]byte, []int) {
	return file_as_external_api_data_proto_rawDescGZIP(), []int{17}
}

func (x *PostSoilDataRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *PostSoilDataRequest) GetTempC() float64 {
	if x != nil {
		return x.TempC
	}
	return 0
}

func (x *PostSoilDataRequest) GetWaterSoil() float64 {
	if x != nil {
		return x.WaterSoil
	}
	return 0
}

func (x *PostSoilDataRequest) GetTempSoil() float64 {
	if x != nil {
		return x.TempSoil
	}
	return 0
}

func (x *PostSoilDataRequest) GetConductSoil() float64 {
	if x != nil {
		return x.ConductSoil
	}
	return 0
}

var File_as_external_api_data_proto protoreflect.FileDescriptor

var file_as_external_api_data_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a,
	0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdc,
	0x01, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x5f, 0x53, 0x48, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x5f, 0x53, 0x48, 0x54, 0x12, 0x18, 0x0a, 0x07, 0x48,
	0x75, 0x6d, 0x5f, 0x53, 0x48, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x48, 0x75,
	0x6d, 0x5f, 0x53, 0x48, 0x54, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x45, 0x55, 0x49, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd9, 0x04, 0x0a, 0x0c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x45, 0x55, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x69, 0x72, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x41, 0x69, 0x72, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x5f, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x41, 0x69, 0x72, 0x5f, 0x48, 0x75, 0x6d,
	0x61, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x5f, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x53, 0x6f, 0x6c, 0x5f, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x53, 0x6f,
	0x6c, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x53, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x57, 0x61, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x65, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x65, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x65, 0x6b, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x57, 0x61, 0x74,
	0x65, 0x72, 0x4c, 0x65, 0x65, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x6f, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x6f, 0x6f, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x6f, 0x72, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x6f, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xa7, 0x02, 0x0a, 0x08, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x5f, 0x44, 0x53, 0x31, 0x38, 0x42, 0x32, 0x30, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x5f, 0x44, 0x53, 0x31,
	0x38, 0x42, 0x32, 0x30, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x53, 0x4f,
	0x49, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x53, 0x4f, 0x49, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x53, 0x4f, 0x49,
	0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x53, 0x4f,
	0x49, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x53, 0x4f,
	0x49, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x53, 0x4f, 0x49, 0x4c, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76,
	0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45,
	0x55, 0x49, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x66, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xab, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44, 0x44,
	0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x54, 0x45, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x54, 0x45,
	0x50, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x71, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f,
	0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55,
	0x49, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x66, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x73, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x22, 0xa8, 0x01,
	0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x6f, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x73,
	0x6f, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x73, 0x6f, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6f, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x32, 0xd7, 0x05, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x6a, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x72, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x73, 0x6f, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x49, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x63, 0x0a, 0x21, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x62, 0x72, 0x61, 0x68, 0x69, 0x6d, 0x6f, 0x7a, 0x65, 0x6b, 0x69,
	0x63, 0x69, 0x2f, 0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x35, 0x2f, 0x61, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_as_external_api_data_proto_rawDescOnce sync.Once
	file_as_external_api_data_proto_rawDescData = file_as_external_api_data_proto_rawDesc
)

func file_as_external_api_data_proto_rawDescGZIP() []byte {
	file_as_external_api_data_proto_rawDescOnce.Do(func() {
		file_as_external_api_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_as_external_api_data_proto_rawDescData)
	})
	return file_as_external_api_data_proto_rawDescData
}

var file_as_external_api_data_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_as_external_api_data_proto_goTypes = []interface{}{
	(*TransData)(nil),                   // 0: api.TransData
	(*TemperatureData)(nil),             // 1: api.TemperatureData
	(*ListDataRequest)(nil),             // 2: api.ListDataRequest
	(*ListDataResponse)(nil),            // 3: api.ListDataResponse
	(*DataResponse)(nil),                // 4: api.DataResponse
	(*ListTemperatureDataRequest)(nil),  // 5: api.ListTemperatureDataRequest
	(*ListTemperatureDataResponse)(nil), // 6: api.ListTemperatureDataResponse
	(*SoilData)(nil),                    // 7: api.SoilData
	(*ListSoilDataRequest)(nil),         // 8: api.ListSoilDataRequest
	(*ListSoilDataResponse)(nil),        // 9: api.ListSoilDataResponse
	(*DistanceData)(nil),                // 10: api.DistanceData
	(*ListDistanceDataRequest)(nil),     // 11: api.ListDistanceDataRequest
	(*ListDistanceDataResponse)(nil),    // 12: api.ListDistanceDataResponse
	(*TrackingData)(nil),                // 13: api.TrackingData
	(*ListTrackingDataRequest)(nil),     // 14: api.ListTrackingDataRequest
	(*ListTrackingDataResponse)(nil),    // 15: api.ListTrackingDataResponse
	(*PostTemperatureDataRequest)(nil),  // 16: api.PostTemperatureDataRequest
	(*PostSoilDataRequest)(nil),         // 17: api.PostSoilDataRequest
	(*timestamp.Timestamp)(nil),         // 18: google.protobuf.Timestamp
	(*empty.Empty)(nil),                 // 19: google.protobuf.Empty
}
var file_as_external_api_data_proto_depIdxs = []int32{
	18, // 0: api.TemperatureData.submission_date:type_name -> google.protobuf.Timestamp
	4,  // 1: api.ListDataResponse.result:type_name -> api.DataResponse
	18, // 2: api.DataResponse.submission_date:type_name -> google.protobuf.Timestamp
	1,  // 3: api.ListTemperatureDataResponse.result:type_name -> api.TemperatureData
	18, // 4: api.SoilData.submission_date:type_name -> google.protobuf.Timestamp
	7,  // 5: api.ListSoilDataResponse.result:type_name -> api.SoilData
	18, // 6: api.DistanceData.submission_date:type_name -> google.protobuf.Timestamp
	10, // 7: api.ListDistanceDataResponse.result:type_name -> api.DistanceData
	18, // 8: api.TrackingData.submission_date:type_name -> google.protobuf.Timestamp
	13, // 9: api.ListTrackingDataResponse.result:type_name -> api.TrackingData
	5,  // 10: api.DataService.GetTemperatureData:input_type -> api.ListTemperatureDataRequest
	8,  // 11: api.DataService.GetSoilData:input_type -> api.ListSoilDataRequest
	11, // 12: api.DataService.GetDistanceData:input_type -> api.ListDistanceDataRequest
	14, // 13: api.DataService.GetTrackingData:input_type -> api.ListTrackingDataRequest
	16, // 14: api.DataService.UploadTemperatureData:input_type -> api.PostTemperatureDataRequest
	17, // 15: api.DataService.UploadSoilData:input_type -> api.PostSoilDataRequest
	2,  // 16: api.DataService.GetData:input_type -> api.ListDataRequest
	6,  // 17: api.DataService.GetTemperatureData:output_type -> api.ListTemperatureDataResponse
	9,  // 18: api.DataService.GetSoilData:output_type -> api.ListSoilDataResponse
	12, // 19: api.DataService.GetDistanceData:output_type -> api.ListDistanceDataResponse
	15, // 20: api.DataService.GetTrackingData:output_type -> api.ListTrackingDataResponse
	19, // 21: api.DataService.UploadTemperatureData:output_type -> google.protobuf.Empty
	19, // 22: api.DataService.UploadSoilData:output_type -> google.protobuf.Empty
	3,  // 23: api.DataService.GetData:output_type -> api.ListDataResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_as_external_api_data_proto_init() }
func file_as_external_api_data_proto_init() {
	if File_as_external_api_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_as_external_api_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemperatureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemperatureDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemperatureDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoilData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSoilDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSoilDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistanceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDistanceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDistanceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackingDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackingDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTemperatureDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_as_external_api_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSoilDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_as_external_api_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_as_external_api_data_proto_goTypes,
		DependencyIndexes: file_as_external_api_data_proto_depIdxs,
		MessageInfos:      file_as_external_api_data_proto_msgTypes,
	}.Build()
	File_as_external_api_data_proto = out.File
	file_as_external_api_data_proto_rawDesc = nil
	file_as_external_api_data_proto_goTypes = nil
	file_as_external_api_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	// GetTemperatureData return list of temperature results
	GetTemperatureData(ctx context.Context, in *ListTemperatureDataRequest, opts ...grpc.CallOption) (*ListTemperatureDataResponse, error)
	// GetSoilData return list of soil results
	GetSoilData(ctx context.Context, in *ListSoilDataRequest, opts ...grpc.CallOption) (*ListSoilDataResponse, error)
	// GetDistanceData return list of distance results
	GetDistanceData(ctx context.Context, in *ListDistanceDataRequest, opts ...grpc.CallOption) (*ListDistanceDataResponse, error)
	// GetTrackingData return list of tracking results
	GetTrackingData(ctx context.Context, in *ListTrackingDataRequest, opts ...grpc.CallOption) (*ListTrackingDataResponse, error)
	// UploadTemperatureData post temperature data
	UploadTemperatureData(ctx context.Context, in *PostTemperatureDataRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// UploadSoilData post soil data
	UploadSoilData(ctx context.Context, in *PostSoilDataRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetData(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error)
}

type dataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataServiceClient(cc grpc.ClientConnInterface) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) GetTemperatureData(ctx context.Context, in *ListTemperatureDataRequest, opts ...grpc.CallOption) (*ListTemperatureDataResponse, error) {
	out := new(ListTemperatureDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetTemperatureData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetSoilData(ctx context.Context, in *ListSoilDataRequest, opts ...grpc.CallOption) (*ListSoilDataResponse, error) {
	out := new(ListSoilDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetSoilData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetDistanceData(ctx context.Context, in *ListDistanceDataRequest, opts ...grpc.CallOption) (*ListDistanceDataResponse, error) {
	out := new(ListDistanceDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetDistanceData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetTrackingData(ctx context.Context, in *ListTrackingDataRequest, opts ...grpc.CallOption) (*ListTrackingDataResponse, error) {
	out := new(ListTrackingDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetTrackingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UploadTemperatureData(ctx context.Context, in *PostTemperatureDataRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DataService/UploadTemperatureData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UploadSoilData(ctx context.Context, in *PostSoilDataRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DataService/UploadSoilData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetData(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error) {
	out := new(ListDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	// GetTemperatureData return list of temperature results
	GetTemperatureData(context.Context, *ListTemperatureDataRequest) (*ListTemperatureDataResponse, error)
	// GetSoilData return list of soil results
	GetSoilData(context.Context, *ListSoilDataRequest) (*ListSoilDataResponse, error)
	// GetDistanceData return list of distance results
	GetDistanceData(context.Context, *ListDistanceDataRequest) (*ListDistanceDataResponse, error)
	// GetTrackingData return list of tracking results
	GetTrackingData(context.Context, *ListTrackingDataRequest) (*ListTrackingDataResponse, error)
	// UploadTemperatureData post temperature data
	UploadTemperatureData(context.Context, *PostTemperatureDataRequest) (*empty.Empty, error)
	// UploadSoilData post soil data
	UploadSoilData(context.Context, *PostSoilDataRequest) (*empty.Empty, error)
	GetData(context.Context, *ListDataRequest) (*ListDataResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) GetTemperatureData(context.Context, *ListTemperatureDataRequest) (*ListTemperatureDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTemperatureData not implemented")
}
func (*UnimplementedDataServiceServer) GetSoilData(context.Context, *ListSoilDataRequest) (*ListSoilDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSoilData not implemented")
}
func (*UnimplementedDataServiceServer) GetDistanceData(context.Context, *ListDistanceDataRequest) (*ListDistanceDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDistanceData not implemented")
}
func (*UnimplementedDataServiceServer) GetTrackingData(context.Context, *ListTrackingDataRequest) (*ListTrackingDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrackingData not implemented")
}
func (*UnimplementedDataServiceServer) UploadTemperatureData(context.Context, *PostTemperatureDataRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadTemperatureData not implemented")
}
func (*UnimplementedDataServiceServer) UploadSoilData(context.Context, *PostSoilDataRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadSoilData not implemented")
}
func (*UnimplementedDataServiceServer) GetData(context.Context, *ListDataRequest) (*ListDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_GetTemperatureData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTemperatureDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetTemperatureData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetTemperatureData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetTemperatureData(ctx, req.(*ListTemperatureDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetSoilData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSoilDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetSoilData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetSoilData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetSoilData(ctx, req.(*ListSoilDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetDistanceData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDistanceDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetDistanceData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetDistanceData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetDistanceData(ctx, req.(*ListDistanceDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetTrackingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrackingDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetTrackingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetTrackingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetTrackingData(ctx, req.(*ListTrackingDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UploadTemperatureData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostTemperatureDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UploadTemperatureData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/UploadTemperatureData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UploadTemperatureData(ctx, req.(*PostTemperatureDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UploadSoilData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostSoilDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UploadSoilData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/UploadSoilData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UploadSoilData(ctx, req.(*PostSoilDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetData(ctx, req.(*ListDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTemperatureData",
			Handler:    _DataService_GetTemperatureData_Handler,
		},
		{
			MethodName: "GetSoilData",
			Handler:    _DataService_GetSoilData_Handler,
		},
		{
			MethodName: "GetDistanceData",
			Handler:    _DataService_GetDistanceData_Handler,
		},
		{
			MethodName: "GetTrackingData",
			Handler:    _DataService_GetTrackingData_Handler,
		},
		{
			MethodName: "UploadTemperatureData",
			Handler:    _DataService_UploadTemperatureData_Handler,
		},
		{
			MethodName: "UploadSoilData",
			Handler:    _DataService_UploadSoilData_Handler,
		},
		{
			MethodName: "GetData",
			Handler:    _DataService_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/data.proto",
}
