// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/data.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDataListRequest struct {
	IdList               string   `protobuf:"bytes,1,opt,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDataListRequest) Reset()         { *m = GetDataListRequest{} }
func (m *GetDataListRequest) String() string { return proto.CompactTextString(m) }
func (*GetDataListRequest) ProtoMessage()    {}
func (*GetDataListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{0}
}

func (m *GetDataListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataListRequest.Unmarshal(m, b)
}
func (m *GetDataListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataListRequest.Marshal(b, m, deterministic)
}
func (m *GetDataListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataListRequest.Merge(m, src)
}
func (m *GetDataListRequest) XXX_Size() int {
	return xxx_messageInfo_GetDataListRequest.Size(m)
}
func (m *GetDataListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataListRequest proto.InternalMessageInfo

func (m *GetDataListRequest) GetIdList() string {
	if m != nil {
		return m.IdList
	}
	return ""
}

type ListDataRequest struct {
	// Service-profile ID to filter on (string formatted UUID).
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	// Search on name or DevEUI.
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// device_type_id device type id filter
	DeviceTypeId int64 `protobuf:"varint,3,opt,name=device_type_id,json=DeviceTypeID,proto3" json:"device_type_id,omitempty"`
	// Max number of devices to return in the result-set.
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime            string   `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              string   `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDataRequest) Reset()         { *m = ListDataRequest{} }
func (m *ListDataRequest) String() string { return proto.CompactTextString(m) }
func (*ListDataRequest) ProtoMessage()    {}
func (*ListDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{1}
}

func (m *ListDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataRequest.Unmarshal(m, b)
}
func (m *ListDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataRequest.Marshal(b, m, deterministic)
}
func (m *ListDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataRequest.Merge(m, src)
}
func (m *ListDataRequest) XXX_Size() int {
	return xxx_messageInfo_ListDataRequest.Size(m)
}
func (m *ListDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataRequest proto.InternalMessageInfo

func (m *ListDataRequest) GetZoneId() int64 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *ListDataRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *ListDataRequest) GetDeviceTypeId() int64 {
	if m != nil {
		return m.DeviceTypeId
	}
	return 0
}

func (m *ListDataRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDataRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ListDataRequest) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

type ListDataResponse struct {
	// Total number of devices available within the result-set.
	TotalCount           int64           `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*DataResponse `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListDataResponse) Reset()         { *m = ListDataResponse{} }
func (m *ListDataResponse) String() string { return proto.CompactTextString(m) }
func (*ListDataResponse) ProtoMessage()    {}
func (*ListDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{2}
}

func (m *ListDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataResponse.Unmarshal(m, b)
}
func (m *ListDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataResponse.Marshal(b, m, deterministic)
}
func (m *ListDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataResponse.Merge(m, src)
}
func (m *ListDataResponse) XXX_Size() int {
	return xxx_messageInfo_ListDataResponse.Size(m)
}
func (m *ListDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataResponse proto.InternalMessageInfo

func (m *ListDataResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDataResponse) GetResult() []*DataResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type ListDataResponse2 struct {
	// Total number of devices available within the result-set.
	TotalCount           int64      `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*any.Any `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListDataResponse2) Reset()         { *m = ListDataResponse2{} }
func (m *ListDataResponse2) String() string { return proto.CompactTextString(m) }
func (*ListDataResponse2) ProtoMessage()    {}
func (*ListDataResponse2) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{3}
}

func (m *ListDataResponse2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataResponse2.Unmarshal(m, b)
}
func (m *ListDataResponse2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataResponse2.Marshal(b, m, deterministic)
}
func (m *ListDataResponse2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataResponse2.Merge(m, src)
}
func (m *ListDataResponse2) XXX_Size() int {
	return xxx_messageInfo_ListDataResponse2.Size(m)
}
func (m *ListDataResponse2) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataResponse2.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataResponse2 proto.InternalMessageInfo

func (m *ListDataResponse2) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDataResponse2) GetResult() []*any.Any {
	if m != nil {
		return m.Result
	}
	return nil
}

type Uc300Response struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	Adc_1                int64                `protobuf:"varint,4,opt,name=adc_1,json=adc1,proto3" json:"adc_1,omitempty"`
	Adc_2                int64                `protobuf:"varint,5,opt,name=adc_2,json=adc2,proto3" json:"adc_2,omitempty"`
	Adv_1                int64                `protobuf:"varint,6,opt,name=adv_1,json=adv1,proto3" json:"adv_1,omitempty"`
	GpioIn_1             int64                `protobuf:"varint,7,opt,name=gpio_in_1,json=gpioIn1,proto3" json:"gpio_in_1,omitempty"`
	GpioIn_2             int64                `protobuf:"varint,8,opt,name=gpio_in_2,json=gpioIn2,proto3" json:"gpio_in_2,omitempty"`
	GpioIn_3             int64                `protobuf:"varint,9,opt,name=gpio_in_3,json=gpioIn3,proto3" json:"gpio_in_3,omitempty"`
	GpioIn_4             int64                `protobuf:"varint,10,opt,name=gpio_in_4,json=gpioIn4,proto3" json:"gpio_in_4,omitempty"`
	GpioOut_1            int64                `protobuf:"varint,11,opt,name=gpio_out_1,json=gpioOut1,proto3" json:"gpio_out_1,omitempty"`
	GpioOut_2            int64                `protobuf:"varint,12,opt,name=gpio_out_2,json=gpioOut2,proto3" json:"gpio_out_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Uc300Response) Reset()         { *m = Uc300Response{} }
func (m *Uc300Response) String() string { return proto.CompactTextString(m) }
func (*Uc300Response) ProtoMessage()    {}
func (*Uc300Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{4}
}

func (m *Uc300Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uc300Response.Unmarshal(m, b)
}
func (m *Uc300Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uc300Response.Marshal(b, m, deterministic)
}
func (m *Uc300Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uc300Response.Merge(m, src)
}
func (m *Uc300Response) XXX_Size() int {
	return xxx_messageInfo_Uc300Response.Size(m)
}
func (m *Uc300Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Uc300Response.DiscardUnknown(m)
}

var xxx_messageInfo_Uc300Response proto.InternalMessageInfo

func (m *Uc300Response) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *Uc300Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Uc300Response) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

func (m *Uc300Response) GetAdc_1() int64 {
	if m != nil {
		return m.Adc_1
	}
	return 0
}

func (m *Uc300Response) GetAdc_2() int64 {
	if m != nil {
		return m.Adc_2
	}
	return 0
}

func (m *Uc300Response) GetAdv_1() int64 {
	if m != nil {
		return m.Adv_1
	}
	return 0
}

func (m *Uc300Response) GetGpioIn_1() int64 {
	if m != nil {
		return m.GpioIn_1
	}
	return 0
}

func (m *Uc300Response) GetGpioIn_2() int64 {
	if m != nil {
		return m.GpioIn_2
	}
	return 0
}

func (m *Uc300Response) GetGpioIn_3() int64 {
	if m != nil {
		return m.GpioIn_3
	}
	return 0
}

func (m *Uc300Response) GetGpioIn_4() int64 {
	if m != nil {
		return m.GpioIn_4
	}
	return 0
}

func (m *Uc300Response) GetGpioOut_1() int64 {
	if m != nil {
		return m.GpioOut_1
	}
	return 0
}

func (m *Uc300Response) GetGpioOut_2() int64 {
	if m != nil {
		return m.GpioOut_2
	}
	return 0
}

type TemHumDateResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// temp_SHT of the device.
	AirTemperature float32 `protobuf:"fixed32,3,opt,name=air_temperature,json=Air_Temperature,proto3" json:"air_temperature,omitempty"`
	// hum_SHT.
	AirHumadity          float32              `protobuf:"fixed32,4,opt,name=air_humadity,json=Air_Humadity,proto3" json:"air_humadity,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TemHumDateResponse) Reset()         { *m = TemHumDateResponse{} }
func (m *TemHumDateResponse) String() string { return proto.CompactTextString(m) }
func (*TemHumDateResponse) ProtoMessage()    {}
func (*TemHumDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{5}
}

func (m *TemHumDateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemHumDateResponse.Unmarshal(m, b)
}
func (m *TemHumDateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemHumDateResponse.Marshal(b, m, deterministic)
}
func (m *TemHumDateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemHumDateResponse.Merge(m, src)
}
func (m *TemHumDateResponse) XXX_Size() int {
	return xxx_messageInfo_TemHumDateResponse.Size(m)
}
func (m *TemHumDateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TemHumDateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TemHumDateResponse proto.InternalMessageInfo

func (m *TemHumDateResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *TemHumDateResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TemHumDateResponse) GetAirTemperature() float32 {
	if m != nil {
		return m.AirTemperature
	}
	return 0
}

func (m *TemHumDateResponse) GetAirHumadity() float32 {
	if m != nil {
		return m.AirHumadity
	}
	return 0
}

func (m *TemHumDateResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type SoilSensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// water_SOIL of the device.
	SolWater float32 `protobuf:"fixed32,5,opt,name=sol_water,json=Sol_Water,proto3" json:"sol_water,omitempty"`
	// temp_SOIL of the device.
	SolTemperature float32 `protobuf:"fixed32,6,opt,name=sol_temperature,json=Sol_Temperature,proto3" json:"sol_temperature,omitempty"`
	// conduct_SOIL of the device.
	SolConductSoil       float32              `protobuf:"fixed32,7,opt,name=sol_conduct_soil,json=Sol_conduct_soil,proto3" json:"sol_conduct_soil,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SoilSensorResponse) Reset()         { *m = SoilSensorResponse{} }
func (m *SoilSensorResponse) String() string { return proto.CompactTextString(m) }
func (*SoilSensorResponse) ProtoMessage()    {}
func (*SoilSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{6}
}

func (m *SoilSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoilSensorResponse.Unmarshal(m, b)
}
func (m *SoilSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoilSensorResponse.Marshal(b, m, deterministic)
}
func (m *SoilSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoilSensorResponse.Merge(m, src)
}
func (m *SoilSensorResponse) XXX_Size() int {
	return xxx_messageInfo_SoilSensorResponse.Size(m)
}
func (m *SoilSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SoilSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SoilSensorResponse proto.InternalMessageInfo

func (m *SoilSensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SoilSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SoilSensorResponse) GetSolWater() float32 {
	if m != nil {
		return m.SolWater
	}
	return 0
}

func (m *SoilSensorResponse) GetSolTemperature() float32 {
	if m != nil {
		return m.SolTemperature
	}
	return 0
}

func (m *SoilSensorResponse) GetSolConductSoil() float32 {
	if m != nil {
		return m.SolConductSoil
	}
	return 0
}

func (m *SoilSensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type WaterLeekSensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WaterStatus          int64                `protobuf:"varint,10,opt,name=water_status,json=WaterStatus,proto3" json:"water_status,omitempty"`
	WaterLeekTimes       int64                `protobuf:"varint,11,opt,name=water_leek_times,json=WaterLeekTimes,proto3" json:"water_leek_times,omitempty"`
	WaterLeekDuration    int64                `protobuf:"varint,12,opt,name=water_leek_duration,json=WaterLeekDuration,proto3" json:"water_leek_duration,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WaterLeekSensorResponse) Reset()         { *m = WaterLeekSensorResponse{} }
func (m *WaterLeekSensorResponse) String() string { return proto.CompactTextString(m) }
func (*WaterLeekSensorResponse) ProtoMessage()    {}
func (*WaterLeekSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{7}
}

func (m *WaterLeekSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaterLeekSensorResponse.Unmarshal(m, b)
}
func (m *WaterLeekSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaterLeekSensorResponse.Marshal(b, m, deterministic)
}
func (m *WaterLeekSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaterLeekSensorResponse.Merge(m, src)
}
func (m *WaterLeekSensorResponse) XXX_Size() int {
	return xxx_messageInfo_WaterLeekSensorResponse.Size(m)
}
func (m *WaterLeekSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaterLeekSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaterLeekSensorResponse proto.InternalMessageInfo

func (m *WaterLeekSensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *WaterLeekSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WaterLeekSensorResponse) GetWaterStatus() int64 {
	if m != nil {
		return m.WaterStatus
	}
	return 0
}

func (m *WaterLeekSensorResponse) GetWaterLeekTimes() int64 {
	if m != nil {
		return m.WaterLeekTimes
	}
	return 0
}

func (m *WaterLeekSensorResponse) GetWaterLeekDuration() int64 {
	if m != nil {
		return m.WaterLeekDuration
	}
	return 0
}

func (m *WaterLeekSensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type AirQualitySensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// temp_SHT of the device.
	AirTemperature float32 `protobuf:"fixed32,3,opt,name=air_temperature,json=Air_Temperature,proto3" json:"air_temperature,omitempty"`
	// hum_SHT.
	AirHumadity float32 `protobuf:"fixed32,4,opt,name=air_humadity,json=Air_Humadity,proto3" json:"air_humadity,omitempty"`
	// temp_SOIL of the device.
	TvocPpb float32 `protobuf:"fixed32,18,opt,name=tvoc_ppb,json=Tvoc_ppb,proto3" json:"tvoc_ppb,omitempty"`
	// conduct_SOIL of the device.
	Co2Ppm               float32              `protobuf:"fixed32,19,opt,name=co2_ppm,json=Co2_ppm,proto3" json:"co2_ppm,omitempty"`
	BarometricPressure   float32              `protobuf:"fixed32,23,opt,name=barometric_pressure,json=BarometricPressure,proto3" json:"barometric_pressure,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AirQualitySensorResponse) Reset()         { *m = AirQualitySensorResponse{} }
func (m *AirQualitySensorResponse) String() string { return proto.CompactTextString(m) }
func (*AirQualitySensorResponse) ProtoMessage()    {}
func (*AirQualitySensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{8}
}

func (m *AirQualitySensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirQualitySensorResponse.Unmarshal(m, b)
}
func (m *AirQualitySensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirQualitySensorResponse.Marshal(b, m, deterministic)
}
func (m *AirQualitySensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirQualitySensorResponse.Merge(m, src)
}
func (m *AirQualitySensorResponse) XXX_Size() int {
	return xxx_messageInfo_AirQualitySensorResponse.Size(m)
}
func (m *AirQualitySensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AirQualitySensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AirQualitySensorResponse proto.InternalMessageInfo

func (m *AirQualitySensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *AirQualitySensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AirQualitySensorResponse) GetAirTemperature() float32 {
	if m != nil {
		return m.AirTemperature
	}
	return 0
}

func (m *AirQualitySensorResponse) GetAirHumadity() float32 {
	if m != nil {
		return m.AirHumadity
	}
	return 0
}

func (m *AirQualitySensorResponse) GetTvocPpb() float32 {
	if m != nil {
		return m.TvocPpb
	}
	return 0
}

func (m *AirQualitySensorResponse) GetCo2Ppm() float32 {
	if m != nil {
		return m.Co2Ppm
	}
	return 0
}

func (m *AirQualitySensorResponse) GetBarometricPressure() float32 {
	if m != nil {
		return m.BarometricPressure
	}
	return 0
}

func (m *AirQualitySensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type DoorSensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DoorStatus           int64                `protobuf:"varint,13,opt,name=door_status,json=DoorStatus,proto3" json:"door_status,omitempty"`
	DoorOpenTimes        int64                `protobuf:"varint,14,opt,name=door_open_times,json=DoorOpenTimes,proto3" json:"door_open_times,omitempty"`
	DoorOpenDuration     int64                `protobuf:"varint,15,opt,name=door_open_duration,json=DoorOpenDuration,proto3" json:"door_open_duration,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DoorSensorResponse) Reset()         { *m = DoorSensorResponse{} }
func (m *DoorSensorResponse) String() string { return proto.CompactTextString(m) }
func (*DoorSensorResponse) ProtoMessage()    {}
func (*DoorSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{9}
}

func (m *DoorSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoorSensorResponse.Unmarshal(m, b)
}
func (m *DoorSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoorSensorResponse.Marshal(b, m, deterministic)
}
func (m *DoorSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoorSensorResponse.Merge(m, src)
}
func (m *DoorSensorResponse) XXX_Size() int {
	return xxx_messageInfo_DoorSensorResponse.Size(m)
}
func (m *DoorSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoorSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoorSensorResponse proto.InternalMessageInfo

func (m *DoorSensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DoorSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DoorSensorResponse) GetDoorStatus() int64 {
	if m != nil {
		return m.DoorStatus
	}
	return 0
}

func (m *DoorSensorResponse) GetDoorOpenTimes() int64 {
	if m != nil {
		return m.DoorOpenTimes
	}
	return 0
}

func (m *DoorSensorResponse) GetDoorOpenDuration() int64 {
	if m != nil {
		return m.DoorOpenDuration
	}
	return 0
}

func (m *DoorSensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type LightSensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SensecapLight        float32              `protobuf:"fixed32,22,opt,name=sensecap_light,json=SensecapLight,proto3" json:"sensecap_light,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LightSensorResponse) Reset()         { *m = LightSensorResponse{} }
func (m *LightSensorResponse) String() string { return proto.CompactTextString(m) }
func (*LightSensorResponse) ProtoMessage()    {}
func (*LightSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{10}
}

func (m *LightSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightSensorResponse.Unmarshal(m, b)
}
func (m *LightSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightSensorResponse.Marshal(b, m, deterministic)
}
func (m *LightSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightSensorResponse.Merge(m, src)
}
func (m *LightSensorResponse) XXX_Size() int {
	return xxx_messageInfo_LightSensorResponse.Size(m)
}
func (m *LightSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LightSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LightSensorResponse proto.InternalMessageInfo

func (m *LightSensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *LightSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LightSensorResponse) GetSensecapLight() float32 {
	if m != nil {
		return m.SensecapLight
	}
	return 0
}

func (m *LightSensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type EnergySensorResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Power                float32              `protobuf:"fixed32,3,opt,name=power,json=Power,proto3" json:"power,omitempty"`
	Current              float32              `protobuf:"fixed32,4,opt,name=current,json=Current,proto3" json:"current,omitempty"`
	Voltage              float32              `protobuf:"fixed32,5,opt,name=voltage,json=Voltage,proto3" json:"voltage,omitempty"`
	Factor               float32              `protobuf:"fixed32,6,opt,name=factor,json=Factor,proto3" json:"factor,omitempty"`
	PowerSum             float32              `protobuf:"fixed32,7,opt,name=power_sum,json=PowerSum,proto3" json:"power_sum,omitempty"`
	Status               int64                `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EnergySensorResponse) Reset()         { *m = EnergySensorResponse{} }
func (m *EnergySensorResponse) String() string { return proto.CompactTextString(m) }
func (*EnergySensorResponse) ProtoMessage()    {}
func (*EnergySensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{11}
}

func (m *EnergySensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnergySensorResponse.Unmarshal(m, b)
}
func (m *EnergySensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnergySensorResponse.Marshal(b, m, deterministic)
}
func (m *EnergySensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnergySensorResponse.Merge(m, src)
}
func (m *EnergySensorResponse) XXX_Size() int {
	return xxx_messageInfo_EnergySensorResponse.Size(m)
}
func (m *EnergySensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnergySensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnergySensorResponse proto.InternalMessageInfo

func (m *EnergySensorResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *EnergySensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnergySensorResponse) GetPower() float32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *EnergySensorResponse) GetCurrent() float32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *EnergySensorResponse) GetVoltage() float32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *EnergySensorResponse) GetFactor() float32 {
	if m != nil {
		return m.Factor
	}
	return 0
}

func (m *EnergySensorResponse) GetPowerSum() float32 {
	if m != nil {
		return m.PowerSum
	}
	return 0
}

func (m *EnergySensorResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EnergySensorResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type WS558Response struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Power                float32              `protobuf:"fixed32,3,opt,name=power,json=Power,proto3" json:"power,omitempty"`
	PowerConsumption     float32              `protobuf:"fixed32,4,opt,name=power_consumption,json=PowerConsumption,proto3" json:"power_consumption,omitempty"`
	Current              float32              `protobuf:"fixed32,5,opt,name=current,json=Current,proto3" json:"current,omitempty"`
	Voltage              float32              `protobuf:"fixed32,6,opt,name=voltage,json=Voltage,proto3" json:"voltage,omitempty"`
	Factor               float32              `protobuf:"fixed32,7,opt,name=factor,json=Factor,proto3" json:"factor,omitempty"`
	Switch1              int64                `protobuf:"varint,8,opt,name=switch1,json=Switch1,proto3" json:"switch1,omitempty"`
	Switch2              int64                `protobuf:"varint,9,opt,name=switch2,json=Switch2,proto3" json:"switch2,omitempty"`
	Switch3              int64                `protobuf:"varint,10,opt,name=switch3,json=Switch3,proto3" json:"switch3,omitempty"`
	Switch4              int64                `protobuf:"varint,11,opt,name=switch4,json=Switch4,proto3" json:"switch4,omitempty"`
	Switch5              int64                `protobuf:"varint,12,opt,name=switch5,json=Switch5,proto3" json:"switch5,omitempty"`
	Switch6              int64                `protobuf:"varint,13,opt,name=switch6,json=Switch6,proto3" json:"switch6,omitempty"`
	Switch7              int64                `protobuf:"varint,14,opt,name=switch7,json=Switch7,proto3" json:"switch7,omitempty"`
	Switch8              int64                `protobuf:"varint,15,opt,name=switch8,json=Switch8,proto3" json:"switch8,omitempty"`
	SubmissionDate       *timestamp.Timestamp `protobuf:"bytes,16,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WS558Response) Reset()         { *m = WS558Response{} }
func (m *WS558Response) String() string { return proto.CompactTextString(m) }
func (*WS558Response) ProtoMessage()    {}
func (*WS558Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{12}
}

func (m *WS558Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WS558Response.Unmarshal(m, b)
}
func (m *WS558Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WS558Response.Marshal(b, m, deterministic)
}
func (m *WS558Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WS558Response.Merge(m, src)
}
func (m *WS558Response) XXX_Size() int {
	return xxx_messageInfo_WS558Response.Size(m)
}
func (m *WS558Response) XXX_DiscardUnknown() {
	xxx_messageInfo_WS558Response.DiscardUnknown(m)
}

var xxx_messageInfo_WS558Response proto.InternalMessageInfo

func (m *WS558Response) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *WS558Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WS558Response) GetPower() float32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *WS558Response) GetPowerConsumption() float32 {
	if m != nil {
		return m.PowerConsumption
	}
	return 0
}

func (m *WS558Response) GetCurrent() float32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *WS558Response) GetVoltage() float32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WS558Response) GetFactor() float32 {
	if m != nil {
		return m.Factor
	}
	return 0
}

func (m *WS558Response) GetSwitch1() int64 {
	if m != nil {
		return m.Switch1
	}
	return 0
}

func (m *WS558Response) GetSwitch2() int64 {
	if m != nil {
		return m.Switch2
	}
	return 0
}

func (m *WS558Response) GetSwitch3() int64 {
	if m != nil {
		return m.Switch3
	}
	return 0
}

func (m *WS558Response) GetSwitch4() int64 {
	if m != nil {
		return m.Switch4
	}
	return 0
}

func (m *WS558Response) GetSwitch5() int64 {
	if m != nil {
		return m.Switch5
	}
	return 0
}

func (m *WS558Response) GetSwitch6() int64 {
	if m != nil {
		return m.Switch6
	}
	return 0
}

func (m *WS558Response) GetSwitch7() int64 {
	if m != nil {
		return m.Switch7
	}
	return 0
}

func (m *WS558Response) GetSwitch8() int64 {
	if m != nil {
		return m.Switch8
	}
	return 0
}

func (m *WS558Response) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

type DataResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// temp_SHT of the device.
	AirTemperature float32 `protobuf:"fixed32,3,opt,name=air_temperature,json=Air_Temperature,proto3" json:"air_temperature,omitempty"`
	// hum_SHT.
	AirHumadity float32 `protobuf:"fixed32,4,opt,name=air_humadity,json=Air_Humadity,proto3" json:"air_humadity,omitempty"`
	// water_SOIL of the device.
	SolWater float32 `protobuf:"fixed32,5,opt,name=sol_water,json=Sol_Water,proto3" json:"sol_water,omitempty"`
	// temp_SOIL of the device.
	SolTemperature float32 `protobuf:"fixed32,6,opt,name=sol_temperature,json=Sol_Temperature,proto3" json:"sol_temperature,omitempty"`
	// conduct_SOIL of the device.
	SolConductSoil float32 `protobuf:"fixed32,7,opt,name=sol_conduct_soil,json=Sol_conduct_soil,proto3" json:"sol_conduct_soil,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate    *timestamp.Timestamp `protobuf:"bytes,8,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	Description       string               `protobuf:"bytes,9,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	WaterStatus       int64                `protobuf:"varint,10,opt,name=water_status,json=WaterStatus,proto3" json:"water_status,omitempty"`
	WaterLeekTimes    int64                `protobuf:"varint,11,opt,name=water_leek_times,json=WaterLeekTimes,proto3" json:"water_leek_times,omitempty"`
	WaterLeekDuration int64                `protobuf:"varint,12,opt,name=water_leek_duration,json=WaterLeekDuration,proto3" json:"water_leek_duration,omitempty"`
	DoorStatus        int64                `protobuf:"varint,13,opt,name=door_status,json=DoorStatus,proto3" json:"door_status,omitempty"`
	DoorOpenTimes     int64                `protobuf:"varint,14,opt,name=door_open_times,json=DoorOpenTimes,proto3" json:"door_open_times,omitempty"`
	DoorOpenDuration  int64                `protobuf:"varint,15,opt,name=door_open_duration,json=DoorOpenDuration,proto3" json:"door_open_duration,omitempty"`
	Ro1Status         int64                `protobuf:"varint,16,opt,name=ro1_status,proto3" json:"ro1_status,omitempty"`
	Ro2Status         int64                `protobuf:"varint,17,opt,name=ro2_status,proto3" json:"ro2_status,omitempty"`
	// temp_SOIL of the device.
	TvocPpb float32 `protobuf:"fixed32,18,opt,name=tvoc_ppb,json=Tvoc_ppb,proto3" json:"tvoc_ppb,omitempty"`
	// conduct_SOIL of the device.
	Co2Ppm float32 `protobuf:"fixed32,19,opt,name=co2_ppm,json=Co2_ppm,proto3" json:"co2_ppm,omitempty"`
	// temp_SOIL of the device.
	PhSoil               float32  `protobuf:"fixed32,20,opt,name=ph_soil,json=Ph_soil,proto3" json:"ph_soil,omitempty"`
	BatV                 float32  `protobuf:"fixed32,21,opt,name=bat_v,json=batV,proto3" json:"bat_v,omitempty"`
	SensecapLight        float32  `protobuf:"fixed32,22,opt,name=sensecap_light,json=SensecapLight,proto3" json:"sensecap_light,omitempty"`
	BarometricPressure   float32  `protobuf:"fixed32,23,opt,name=barometric_pressure,json=BarometricPressure,proto3" json:"barometric_pressure,omitempty"`
	Power                float32  `protobuf:"fixed32,24,opt,name=power,json=Power,proto3" json:"power,omitempty"`
	Current              float32  `protobuf:"fixed32,25,opt,name=current,json=Current,proto3" json:"current,omitempty"`
	Voltage              float32  `protobuf:"fixed32,26,opt,name=voltage,json=Voltage,proto3" json:"voltage,omitempty"`
	Factor               float32  `protobuf:"fixed32,27,opt,name=factor,json=Factor,proto3" json:"factor,omitempty"`
	PowerSum             float32  `protobuf:"fixed32,28,opt,name=power_sum,json=PowerSum,proto3" json:"power_sum,omitempty"`
	Status               int64    `protobuf:"varint,29,opt,name=status,proto3" json:"status,omitempty"`
	Switch1              int64    `protobuf:"varint,30,opt,name=switch1,json=Switch1,proto3" json:"switch1,omitempty"`
	Switch2              int64    `protobuf:"varint,31,opt,name=switch2,json=Switch2,proto3" json:"switch2,omitempty"`
	Switch3              int64    `protobuf:"varint,32,opt,name=switch3,json=Switch3,proto3" json:"switch3,omitempty"`
	Switch4              int64    `protobuf:"varint,33,opt,name=switch4,json=Switch4,proto3" json:"switch4,omitempty"`
	Switch5              int64    `protobuf:"varint,34,opt,name=switch5,json=Switch5,proto3" json:"switch5,omitempty"`
	Switch6              int64    `protobuf:"varint,35,opt,name=switch6,json=Switch6,proto3" json:"switch6,omitempty"`
	Switch7              int64    `protobuf:"varint,36,opt,name=switch7,json=Switch7,proto3" json:"switch7,omitempty"`
	Switch8              int64    `protobuf:"varint,37,opt,name=switch8,json=Switch8,proto3" json:"switch8,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1941324fdc82693e, []int{13}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DataResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataResponse) GetAirTemperature() float32 {
	if m != nil {
		return m.AirTemperature
	}
	return 0
}

func (m *DataResponse) GetAirHumadity() float32 {
	if m != nil {
		return m.AirHumadity
	}
	return 0
}

func (m *DataResponse) GetSolWater() float32 {
	if m != nil {
		return m.SolWater
	}
	return 0
}

func (m *DataResponse) GetSolTemperature() float32 {
	if m != nil {
		return m.SolTemperature
	}
	return 0
}

func (m *DataResponse) GetSolConductSoil() float32 {
	if m != nil {
		return m.SolConductSoil
	}
	return 0
}

func (m *DataResponse) GetSubmissionDate() *timestamp.Timestamp {
	if m != nil {
		return m.SubmissionDate
	}
	return nil
}

func (m *DataResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DataResponse) GetWaterStatus() int64 {
	if m != nil {
		return m.WaterStatus
	}
	return 0
}

func (m *DataResponse) GetWaterLeekTimes() int64 {
	if m != nil {
		return m.WaterLeekTimes
	}
	return 0
}

func (m *DataResponse) GetWaterLeekDuration() int64 {
	if m != nil {
		return m.WaterLeekDuration
	}
	return 0
}

func (m *DataResponse) GetDoorStatus() int64 {
	if m != nil {
		return m.DoorStatus
	}
	return 0
}

func (m *DataResponse) GetDoorOpenTimes() int64 {
	if m != nil {
		return m.DoorOpenTimes
	}
	return 0
}

func (m *DataResponse) GetDoorOpenDuration() int64 {
	if m != nil {
		return m.DoorOpenDuration
	}
	return 0
}

func (m *DataResponse) GetRo1Status() int64 {
	if m != nil {
		return m.Ro1Status
	}
	return 0
}

func (m *DataResponse) GetRo2Status() int64 {
	if m != nil {
		return m.Ro2Status
	}
	return 0
}

func (m *DataResponse) GetTvocPpb() float32 {
	if m != nil {
		return m.TvocPpb
	}
	return 0
}

func (m *DataResponse) GetCo2Ppm() float32 {
	if m != nil {
		return m.Co2Ppm
	}
	return 0
}

func (m *DataResponse) GetPhSoil() float32 {
	if m != nil {
		return m.PhSoil
	}
	return 0
}

func (m *DataResponse) GetBatV() float32 {
	if m != nil {
		return m.BatV
	}
	return 0
}

func (m *DataResponse) GetSensecapLight() float32 {
	if m != nil {
		return m.SensecapLight
	}
	return 0
}

func (m *DataResponse) GetBarometricPressure() float32 {
	if m != nil {
		return m.BarometricPressure
	}
	return 0
}

func (m *DataResponse) GetPower() float32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *DataResponse) GetCurrent() float32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *DataResponse) GetVoltage() float32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *DataResponse) GetFactor() float32 {
	if m != nil {
		return m.Factor
	}
	return 0
}

func (m *DataResponse) GetPowerSum() float32 {
	if m != nil {
		return m.PowerSum
	}
	return 0
}

func (m *DataResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DataResponse) GetSwitch1() int64 {
	if m != nil {
		return m.Switch1
	}
	return 0
}

func (m *DataResponse) GetSwitch2() int64 {
	if m != nil {
		return m.Switch2
	}
	return 0
}

func (m *DataResponse) GetSwitch3() int64 {
	if m != nil {
		return m.Switch3
	}
	return 0
}

func (m *DataResponse) GetSwitch4() int64 {
	if m != nil {
		return m.Switch4
	}
	return 0
}

func (m *DataResponse) GetSwitch5() int64 {
	if m != nil {
		return m.Switch5
	}
	return 0
}

func (m *DataResponse) GetSwitch6() int64 {
	if m != nil {
		return m.Switch6
	}
	return 0
}

func (m *DataResponse) GetSwitch7() int64 {
	if m != nil {
		return m.Switch7
	}
	return 0
}

func (m *DataResponse) GetSwitch8() int64 {
	if m != nil {
		return m.Switch8
	}
	return 0
}

func init() {
	proto.RegisterType((*GetDataListRequest)(nil), "api.GetDataListRequest")
	proto.RegisterType((*ListDataRequest)(nil), "api.ListDataRequest")
	proto.RegisterType((*ListDataResponse)(nil), "api.ListDataResponse")
	proto.RegisterType((*ListDataResponse2)(nil), "api.ListDataResponse2")
	proto.RegisterType((*Uc300Response)(nil), "api.Uc300Response")
	proto.RegisterType((*TemHumDateResponse)(nil), "api.TemHumDateResponse")
	proto.RegisterType((*SoilSensorResponse)(nil), "api.SoilSensorResponse")
	proto.RegisterType((*WaterLeekSensorResponse)(nil), "api.WaterLeekSensorResponse")
	proto.RegisterType((*AirQualitySensorResponse)(nil), "api.AirQualitySensorResponse")
	proto.RegisterType((*DoorSensorResponse)(nil), "api.DoorSensorResponse")
	proto.RegisterType((*LightSensorResponse)(nil), "api.LightSensorResponse")
	proto.RegisterType((*EnergySensorResponse)(nil), "api.EnergySensorResponse")
	proto.RegisterType((*WS558Response)(nil), "api.WS558Response")
	proto.RegisterType((*DataResponse)(nil), "api.DataResponse")
}

func init() {
	proto.RegisterFile("as/external/api/data.proto", fileDescriptor_1941324fdc82693e)
}

var fileDescriptor_1941324fdc82693e = []byte{
	// 1398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x98, 0x4f, 0x6f, 0x1b, 0xb7,
	0x12, 0xc0, 0x21, 0xd9, 0x96, 0xac, 0x91, 0x6d, 0xc9, 0xb4, 0x13, 0x6f, 0x14, 0x27, 0x76, 0xf4,
	0x92, 0x07, 0xbf, 0xf7, 0x12, 0x29, 0x5a, 0xdb, 0x49, 0x4e, 0x0f, 0x48, 0xac, 0xb4, 0x31, 0x10,
	0x20, 0xa9, 0xe4, 0x24, 0x40, 0x0f, 0x5d, 0x50, 0xbb, 0x8c, 0x4c, 0x58, 0xbb, 0xdc, 0x2e, 0xb9,
	0x4a, 0x9d, 0x63, 0x0f, 0x05, 0x7a, 0xee, 0x17, 0xe8, 0x37, 0xe8, 0xb9, 0x87, 0x5e, 0xfa, 0x15,
	0x8a, 0x7e, 0x80, 0x02, 0xbd, 0xf6, 0x13, 0x14, 0x28, 0x0a, 0xfe, 0x91, 0x76, 0xa5, 0x78, 0xd1,
	0x3a, 0x16, 0x10, 0xf4, 0xa6, 0x99, 0xdf, 0x70, 0x48, 0xce, 0x8c, 0x86, 0x5c, 0x42, 0x0d, 0xf3,
	0x26, 0xf9, 0x42, 0x90, 0x28, 0xc0, 0x83, 0x26, 0x0e, 0x69, 0xd3, 0xc3, 0x02, 0x37, 0xc2, 0x88,
	0x09, 0x86, 0xe6, 0x70, 0x48, 0x6b, 0x9b, 0x7d, 0xc6, 0xfa, 0x03, 0xa2, 0x18, 0x0e, 0x02, 0x26,
	0xb0, 0xa0, 0x2c, 0xe0, 0xda, 0xa4, 0xb6, 0x65, 0xa8, 0x92, 0x7a, 0xf1, 0xeb, 0xa6, 0xa0, 0x3e,
	0xe1, 0x02, 0xfb, 0xa1, 0x31, 0xb8, 0x32, 0x6d, 0x80, 0x83, 0x53, 0x8d, 0xea, 0x77, 0x00, 0x7d,
	0x4c, 0x44, 0x1b, 0x0b, 0xfc, 0x94, 0x72, 0xd1, 0x21, 0x9f, 0xc7, 0x84, 0x0b, 0xb4, 0x01, 0x45,
	0xea, 0x39, 0x03, 0xca, 0x85, 0x95, 0xdb, 0xce, 0xed, 0x94, 0x3a, 0x05, 0xea, 0x49, 0x5e, 0xff,
	0x3e, 0x07, 0x15, 0xf9, 0x43, 0x0e, 0x48, 0x19, 0xbf, 0x65, 0x01, 0x71, 0xa8, 0xa7, 0x8c, 0xe7,
	0x3a, 0x05, 0x29, 0x1e, 0xb6, 0x25, 0xf0, 0xc8, 0xd0, 0x21, 0x31, 0xb5, 0xf2, 0xda, 0x8b, 0x47,
	0x86, 0x8f, 0x5f, 0x1c, 0xa2, 0x9b, 0xb0, 0xe2, 0x91, 0x21, 0x75, 0x89, 0x23, 0x4e, 0x43, 0x35,
	0x70, 0x4e, 0x0d, 0x5c, 0x6a, 0x2b, 0xed, 0xd1, 0x69, 0x28, 0x87, 0xaf, 0xc3, 0xc2, 0x80, 0xfa,
	0x54, 0x58, 0xf3, 0x0a, 0x6a, 0x01, 0x5d, 0x03, 0xe0, 0x02, 0x47, 0xc2, 0x91, 0x9b, 0xb4, 0x16,
	0x94, 0xdf, 0x92, 0xd2, 0x1c, 0x51, 0x9f, 0xa0, 0x2b, 0xb0, 0x48, 0x02, 0x4f, 0xc3, 0x82, 0x82,
	0x45, 0x12, 0x78, 0x12, 0xd5, 0x3f, 0x83, 0x6a, 0xb2, 0x74, 0x1e, 0xb2, 0x80, 0x13, 0xb4, 0x05,
	0x65, 0xc1, 0x04, 0x1e, 0x38, 0x2e, 0x8b, 0x03, 0x61, 0xd6, 0x0f, 0x4a, 0x75, 0x20, 0x35, 0xe8,
	0x3f, 0x50, 0x88, 0x08, 0x8f, 0x07, 0xc2, 0xca, 0x6f, 0xcf, 0xed, 0x94, 0xed, 0xd5, 0x06, 0x0e,
	0x69, 0x23, 0xed, 0xa3, 0x63, 0x0c, 0xea, 0x3d, 0x58, 0x9d, 0xf6, 0x6f, 0xff, 0xf5, 0x04, 0xb7,
	0xa7, 0x26, 0x58, 0x6f, 0xe8, 0x64, 0x35, 0x46, 0xc9, 0x6a, 0x3c, 0x0c, 0x4e, 0xc7, 0x73, 0xfc,
	0x96, 0x87, 0xe5, 0x17, 0xee, 0xee, 0xdd, 0xbb, 0xe3, 0x1d, 0xa4, 0x82, 0x9c, 0x9b, 0x08, 0x32,
	0x82, 0xf9, 0x00, 0xfb, 0xc4, 0x84, 0x5e, 0xfd, 0x46, 0x6d, 0xa8, 0xf0, 0xb8, 0xe7, 0x53, 0xce,
	0x29, 0x0b, 0x1c, 0x0f, 0x0b, 0xa2, 0x22, 0x5f, 0xb6, 0x6b, 0xef, 0xcc, 0x7a, 0x34, 0xaa, 0xa1,
	0xce, 0xf4, 0x10, 0xb4, 0x06, 0x0b, 0xd8, 0x73, 0x9d, 0x96, 0x49, 0xcc, 0x3c, 0xf6, 0xdc, 0xd6,
	0x48, 0x69, 0xab, 0x94, 0x68, 0xa5, 0xad, 0x95, 0x43, 0xa7, 0xa5, 0x52, 0xa1, 0x94, 0xc3, 0x16,
	0xaa, 0x41, 0xa9, 0x1f, 0x52, 0xe6, 0xd0, 0xc0, 0x69, 0x59, 0x45, 0x05, 0x8a, 0x52, 0x71, 0x18,
	0x4c, 0x30, 0xdb, 0x5a, 0x4c, 0x33, 0x3b, 0xcd, 0x76, 0xad, 0x52, 0x9a, 0xed, 0xa6, 0xd9, 0x9e,
	0x05, 0x69, 0xb6, 0x87, 0x36, 0x01, 0x14, 0x63, 0xb1, 0x70, 0x5a, 0x56, 0x59, 0xc1, 0x45, 0xa9,
	0x79, 0x16, 0x8b, 0xd6, 0x04, 0xb5, 0xad, 0xa5, 0x09, 0x6a, 0xd7, 0x7f, 0xce, 0x01, 0x3a, 0x22,
	0xfe, 0x93, 0xd8, 0x6f, 0x63, 0x41, 0xde, 0x2f, 0xe8, 0x3b, 0x50, 0xc1, 0x34, 0x72, 0x04, 0xf1,
	0x43, 0x12, 0x61, 0x11, 0x47, 0x3a, 0xe8, 0xf9, 0x4e, 0xe5, 0x21, 0x8d, 0x9c, 0xa3, 0x44, 0x8d,
	0xea, 0xb0, 0x24, 0x2d, 0x8f, 0x63, 0x1f, 0x7b, 0x54, 0x9c, 0xaa, 0xf8, 0xe6, 0x3b, 0x4b, 0xd2,
	0xec, 0x89, 0xd1, 0x9d, 0x95, 0xc2, 0xc5, 0x73, 0xa7, 0xb0, 0xfe, 0x7b, 0x0e, 0x50, 0x97, 0xd1,
	0x41, 0x97, 0x04, 0x9c, 0x45, 0xef, 0xb7, 0xaf, 0x4d, 0x28, 0x71, 0x36, 0x70, 0xde, 0x60, 0x41,
	0x22, 0x95, 0xf5, 0x7c, 0xa7, 0xd4, 0x65, 0x03, 0xe7, 0x95, 0x54, 0xc8, 0x5d, 0x4b, 0x9a, 0xde,
	0x75, 0x41, 0xef, 0x5a, 0xda, 0xa4, 0x77, 0xfd, 0x5f, 0xa8, 0x4a, 0x4b, 0x97, 0x05, 0x5e, 0xec,
	0x0a, 0x87, 0x33, 0x3a, 0x50, 0x65, 0x91, 0xef, 0x54, 0xbb, 0x53, 0xfa, 0x19, 0xed, 0xfe, 0xeb,
	0x3c, 0x6c, 0xa8, 0x55, 0x3e, 0x25, 0xe4, 0xe4, 0x22, 0x21, 0xb8, 0x01, 0x4b, 0x6a, 0xfb, 0x0e,
	0x17, 0x58, 0xc4, 0xdc, 0x54, 0x5e, 0x59, 0xf9, 0xee, 0x2a, 0x15, 0xda, 0x81, 0xaa, 0x36, 0x19,
	0x10, 0x72, 0xa2, 0xfa, 0x12, 0x37, 0x35, 0xb8, 0x32, 0x5e, 0x82, 0x5a, 0x2a, 0x6a, 0xc0, 0x5a,
	0xca, 0xd2, 0x8b, 0x23, 0xd5, 0xe4, 0x4d, 0x49, 0xae, 0x8e, 0x8d, 0xdb, 0x06, 0xcc, 0x28, 0x16,
	0x3f, 0xe6, 0xc1, 0x7a, 0x48, 0xa3, 0x4f, 0x62, 0x3c, 0xa0, 0xe2, 0xf4, 0x22, 0xc1, 0x98, 0x6d,
	0x9d, 0xd7, 0x60, 0x51, 0x0c, 0x99, 0xeb, 0x84, 0x61, 0xcf, 0x42, 0x8a, 0x2f, 0x1e, 0x19, 0x19,
	0x59, 0x50, 0x74, 0x99, 0xed, 0x84, 0xa1, 0x6f, 0xad, 0x29, 0x54, 0x3c, 0xd0, 0x22, 0x6a, 0xc2,
	0x5a, 0x0f, 0x47, 0xcc, 0x27, 0x22, 0xa2, 0xae, 0x13, 0x46, 0x84, 0x73, 0xb9, 0x8e, 0x0d, 0x65,
	0x85, 0x1e, 0x8d, 0xd1, 0x73, 0x43, 0x66, 0x14, 0xc4, 0x3f, 0x72, 0x80, 0xda, 0x8c, 0x45, 0x17,
	0x09, 0xdf, 0x16, 0x94, 0x3d, 0xc6, 0xc6, 0xa5, 0xb4, 0xac, 0x4f, 0x0a, 0xe5, 0x55, 0x57, 0xd2,
	0xbf, 0xa1, 0xa2, 0x0c, 0x58, 0x48, 0x02, 0x53, 0x48, 0x2b, 0xca, 0x68, 0x59, 0x1a, 0x3d, 0x0b,
	0x49, 0xa0, 0xeb, 0xe8, 0x36, 0xa0, 0xc4, 0x6e, 0x5c, 0x46, 0x15, 0x65, 0x5a, 0x1d, 0x99, 0xce,
	0xb8, 0x8a, 0xbe, 0xcb, 0xc1, 0xda, 0x53, 0xda, 0x3f, 0x16, 0x17, 0x89, 0xc0, 0x2d, 0x58, 0xe1,
	0x24, 0xe0, 0xc4, 0xc5, 0xa1, 0x33, 0x90, 0xce, 0xac, 0xcb, 0x2a, 0x6f, 0xcb, 0x5d, 0xa3, 0x55,
	0x33, 0xcc, 0x68, 0xc5, 0xdf, 0xe6, 0x61, 0xfd, 0x71, 0x40, 0xa2, 0xfe, 0x85, 0x6a, 0x7e, 0x1d,
	0x16, 0x42, 0xf6, 0x86, 0x44, 0xa6, 0xd2, 0x17, 0x9e, 0x4b, 0x41, 0xd5, 0x67, 0x1c, 0x45, 0x24,
	0x10, 0xa6, 0xb4, 0x8b, 0x07, 0x5a, 0x94, 0x64, 0xc8, 0x06, 0x02, 0xf7, 0x89, 0xe9, 0x98, 0xc5,
	0x97, 0x5a, 0x44, 0x97, 0xa1, 0xf0, 0x1a, 0xbb, 0x82, 0x45, 0xa6, 0x4d, 0x16, 0x3e, 0x52, 0x12,
	0xba, 0x0a, 0x25, 0x35, 0x83, 0xc3, 0x63, 0xdf, 0xb4, 0xc5, 0x45, 0x35, 0x4b, 0x37, 0xf6, 0xe5,
	0x20, 0x53, 0x2e, 0xfa, 0xac, 0x34, 0xd2, 0x59, 0x21, 0x2a, 0x9d, 0x3f, 0x44, 0xbf, 0xcc, 0xc1,
	0xf2, 0xab, 0xee, 0xfe, 0xfe, 0x83, 0x59, 0xc6, 0xe6, 0x7f, 0xb0, 0xaa, 0xf7, 0xe3, 0xb2, 0x80,
	0xc7, 0x7e, 0xa8, 0x8a, 0x53, 0x47, 0xa9, 0xaa, 0x2c, 0x0e, 0x12, 0x7d, 0x3a, 0x90, 0x0b, 0x99,
	0x81, 0x2c, 0x64, 0x05, 0xb2, 0x38, 0x11, 0x48, 0x0b, 0x8a, 0xfc, 0x0d, 0x15, 0xee, 0x71, 0x6b,
	0x74, 0xb1, 0xe8, 0x6a, 0x31, 0x21, 0xf6, 0xe8, 0x5a, 0xa1, 0x89, 0x9d, 0x90, 0xdd, 0xd1, 0xa5,
	0x42, 0x93, 0xdd, 0x84, 0xec, 0x99, 0x6e, 0x6e, 0xc8, 0x5e, 0x42, 0xf6, 0x4d, 0xeb, 0x36, 0x64,
	0x3f, 0x21, 0xf7, 0xcc, 0xbf, 0xdb, 0x90, 0x7b, 0x09, 0xb9, 0x6f, 0xfe, 0xd2, 0x86, 0xdc, 0x4f,
	0xc8, 0x03, 0xf3, 0x0f, 0x36, 0xe4, 0xc1, 0x59, 0x39, 0xae, 0x9e, 0x3f, 0xc7, 0x3f, 0x94, 0x60,
	0x69, 0xe2, 0x46, 0xfc, 0x01, 0x5b, 0xfe, 0x3f, 0xf6, 0x42, 0x81, 0xb6, 0xa1, 0xec, 0x11, 0xee,
	0x46, 0x54, 0x97, 0x73, 0x49, 0x85, 0xa8, 0xdc, 0x4e, 0x54, 0x1f, 0xf6, 0xa6, 0xf0, 0x81, 0x8e,
	0x96, 0xeb, 0x00, 0x11, 0x6b, 0x8d, 0x66, 0xad, 0xea, 0x59, 0x13, 0x8d, 0xe6, 0xf6, 0x88, 0xaf,
	0x8e, 0xf8, 0x48, 0xf3, 0x9e, 0x57, 0x00, 0x0b, 0x8a, 0xe1, 0xb1, 0x4e, 0xfa, 0xba, 0x26, 0xcf,
	0xb5, 0x28, 0xbf, 0x46, 0x7a, 0x58, 0x38, 0x43, 0xeb, 0x92, 0xd2, 0xcf, 0xf7, 0xb0, 0x78, 0xf9,
	0x77, 0x0f, 0x9d, 0x73, 0x5f, 0x2c, 0xc6, 0xdd, 0xcf, 0xca, 0x38, 0x19, 0xae, 0x64, 0x36, 0xb4,
	0x5a, 0x56, 0x43, 0xbb, 0x9a, 0x7d, 0x32, 0x6c, 0x66, 0x9e, 0x0c, 0xd7, 0x26, 0x4e, 0x86, 0x54,
	0x17, 0xbc, 0x9e, 0xd9, 0x05, 0xb7, 0x32, 0xbb, 0xe0, 0x76, 0x66, 0x17, 0xbc, 0x91, 0xd9, 0x05,
	0xeb, 0x99, 0x5d, 0xf0, 0x5f, 0x99, 0x5d, 0xf0, 0x66, 0x66, 0x17, 0xbc, 0x35, 0xd1, 0x05, 0xed,
	0xaf, 0xf2, 0x50, 0x96, 0xfd, 0xab, 0x4b, 0xa2, 0x21, 0x75, 0x09, 0x3a, 0x84, 0xa2, 0x79, 0xcf,
	0x40, 0xeb, 0xea, 0x53, 0x7d, 0xea, 0xb5, 0xa2, 0x76, 0x69, 0x4a, 0xab, 0xdb, 0x5e, 0x7d, 0xf5,
	0xcb, 0x9f, 0x7e, 0xfd, 0x26, 0x5f, 0x46, 0xa5, 0xf1, 0xfb, 0x0b, 0x7a, 0x09, 0xcb, 0xc6, 0x95,
	0xfe, 0x02, 0xcc, 0x70, 0x78, 0xf9, 0x4c, 0x87, 0x76, 0x7d, 0x43, 0x79, 0x5c, 0x45, 0x95, 0xb1,
	0x47, 0xe3, 0xe6, 0x08, 0xca, 0xa9, 0x27, 0x17, 0xb4, 0xa1, 0xc6, 0xbf, 0xfb, 0x08, 0x93, 0xb5,
	0xd2, 0x4b, 0xca, 0x6f, 0x05, 0x2d, 0x8f, 0xfd, 0x4a, 0x93, 0x47, 0x2e, 0xdc, 0xa0, 0xac, 0xe1,
	0x1e, 0xd3, 0x28, 0xe4, 0x02, 0xbb, 0x27, 0x6a, 0x30, 0xe6, 0x8d, 0xd1, 0xbb, 0x92, 0x94, 0x3f,
	0xfd, 0x7f, 0x9f, 0x8a, 0xe3, 0xb8, 0xd7, 0x70, 0x99, 0xdf, 0xa4, 0xbd, 0x08, 0x1f, 0x53, 0x9f,
	0xbd, 0x25, 0x27, 0xd4, 0xa5, 0xcd, 0x64, 0xe4, 0x1d, 0xe9, 0xb7, 0xcf, 0x9a, 0xc3, 0xfd, 0xe6,
	0xd4, 0xbb, 0x54, 0xaf, 0xa0, 0x9a, 0xe1, 0xee, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x45, 0x47,
	0x9e, 0x48, 0xb1, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	// GetData api method to get data
	GetData(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error)
	GetDataTemHum(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse2, error)
	GetDataList(ctx context.Context, in *GetDataListRequest, opts ...grpc.CallOption) (*ListDataResponse, error)
}

type dataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataServiceClient(cc grpc.ClientConnInterface) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) GetData(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error) {
	out := new(ListDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetDataTemHum(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse2, error) {
	out := new(ListDataResponse2)
	err := c.cc.Invoke(ctx, "/api.DataService/GetDataTemHum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetDataList(ctx context.Context, in *GetDataListRequest, opts ...grpc.CallOption) (*ListDataResponse, error) {
	out := new(ListDataResponse)
	err := c.cc.Invoke(ctx, "/api.DataService/GetDataList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	// GetData api method to get data
	GetData(context.Context, *ListDataRequest) (*ListDataResponse, error)
	GetDataTemHum(context.Context, *ListDataRequest) (*ListDataResponse2, error)
	GetDataList(context.Context, *GetDataListRequest) (*ListDataResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) GetData(ctx context.Context, req *ListDataRequest) (*ListDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedDataServiceServer) GetDataTemHum(ctx context.Context, req *ListDataRequest) (*ListDataResponse2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataTemHum not implemented")
}
func (*UnimplementedDataServiceServer) GetDataList(ctx context.Context, req *GetDataListRequest) (*ListDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataList not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetData(ctx, req.(*ListDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetDataTemHum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetDataTemHum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetDataTemHum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetDataTemHum(ctx, req.(*ListDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetDataList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetDataList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DataService/GetDataList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetDataList(ctx, req.(*GetDataListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _DataService_GetData_Handler,
		},
		{
			MethodName: "GetDataTemHum",
			Handler:    _DataService_GetDataTemHum_Handler,
		},
		{
			MethodName: "GetDataList",
			Handler:    _DataService_GetDataList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/data.proto",
}
