// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: als/als.proto

package als

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Alarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DevEui            string  `protobuf:"bytes,2,opt,name=devEui,proto3" json:"devEui,omitempty"`
	MinTreshold       float32 `protobuf:"fixed32,3,opt,name=minTreshold,proto3" json:"minTreshold,omitempty"`
	MaxTreshold       float32 `protobuf:"fixed32,4,opt,name=maxTreshold,proto3" json:"maxTreshold,omitempty"`
	Sms               bool    `protobuf:"varint,5,opt,name=sms,proto3" json:"sms,omitempty"`
	Email             bool    `protobuf:"varint,6,opt,name=email,proto3" json:"email,omitempty"`
	Notification      bool    `protobuf:"varint,7,opt,name=notification,proto3" json:"notification,omitempty"`
	Temperature       bool    `protobuf:"varint,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humadity          bool    `protobuf:"varint,9,opt,name=humadity,proto3" json:"humadity,omitempty"`
	Ec                bool    `protobuf:"varint,10,opt,name=ec,proto3" json:"ec,omitempty"`
	Door              bool    `protobuf:"varint,11,opt,name=door,proto3" json:"door,omitempty"`
	WLeak             bool    `protobuf:"varint,12,opt,name=wLeak,proto3" json:"wLeak,omitempty"`
	UserID            int64   `protobuf:"varint,13,opt,name=userID,proto3" json:"userID,omitempty"`
	IpAddress         string  `protobuf:"bytes,14,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	IsTimeLimitActive bool    `protobuf:"varint,15,opt,name=isTimeLimitActive,proto3" json:"isTimeLimitActive,omitempty"`
	AlarmStartTime    float32 `protobuf:"fixed32,16,opt,name=alarmStartTime,proto3" json:"alarmStartTime,omitempty"`
	AlarmStopTime     float32 `protobuf:"fixed32,17,opt,name=alarmStopTime,proto3" json:"alarmStopTime,omitempty"`
	ZoneCategoryID    int64   `protobuf:"varint,18,opt,name=zoneCategoryID,proto3" json:"zoneCategoryID,omitempty"`
	IsActive          bool    `protobuf:"varint,19,opt,name=isActive,proto3" json:"isActive,omitempty"`
}

func (x *Alarm) Reset() {
	*x = Alarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alarm) ProtoMessage() {}

func (x *Alarm) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alarm.ProtoReflect.Descriptor instead.
func (*Alarm) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{0}
}

func (x *Alarm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Alarm) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *Alarm) GetMinTreshold() float32 {
	if x != nil {
		return x.MinTreshold
	}
	return 0
}

func (x *Alarm) GetMaxTreshold() float32 {
	if x != nil {
		return x.MaxTreshold
	}
	return 0
}

func (x *Alarm) GetSms() bool {
	if x != nil {
		return x.Sms
	}
	return false
}

func (x *Alarm) GetEmail() bool {
	if x != nil {
		return x.Email
	}
	return false
}

func (x *Alarm) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

func (x *Alarm) GetTemperature() bool {
	if x != nil {
		return x.Temperature
	}
	return false
}

func (x *Alarm) GetHumadity() bool {
	if x != nil {
		return x.Humadity
	}
	return false
}

func (x *Alarm) GetEc() bool {
	if x != nil {
		return x.Ec
	}
	return false
}

func (x *Alarm) GetDoor() bool {
	if x != nil {
		return x.Door
	}
	return false
}

func (x *Alarm) GetWLeak() bool {
	if x != nil {
		return x.WLeak
	}
	return false
}

func (x *Alarm) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Alarm) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Alarm) GetIsTimeLimitActive() bool {
	if x != nil {
		return x.IsTimeLimitActive
	}
	return false
}

func (x *Alarm) GetAlarmStartTime() float32 {
	if x != nil {
		return x.AlarmStartTime
	}
	return 0
}

func (x *Alarm) GetAlarmStopTime() float32 {
	if x != nil {
		return x.AlarmStopTime
	}
	return 0
}

func (x *Alarm) GetZoneCategoryID() int64 {
	if x != nil {
		return x.ZoneCategoryID
	}
	return 0
}

func (x *Alarm) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type OrganizationAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DevEui            string  `protobuf:"bytes,2,opt,name=devEui,proto3" json:"devEui,omitempty"`
	MinTreshold       float32 `protobuf:"fixed32,3,opt,name=minTreshold,proto3" json:"minTreshold,omitempty"`
	MaxTreshold       float32 `protobuf:"fixed32,4,opt,name=maxTreshold,proto3" json:"maxTreshold,omitempty"`
	Sms               bool    `protobuf:"varint,5,opt,name=sms,proto3" json:"sms,omitempty"`
	Email             bool    `protobuf:"varint,6,opt,name=email,proto3" json:"email,omitempty"`
	Notification      bool    `protobuf:"varint,7,opt,name=notification,proto3" json:"notification,omitempty"`
	Temperature       bool    `protobuf:"varint,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humadity          bool    `protobuf:"varint,9,opt,name=humadity,proto3" json:"humadity,omitempty"`
	Ec                bool    `protobuf:"varint,10,opt,name=ec,proto3" json:"ec,omitempty"`
	Door              bool    `protobuf:"varint,11,opt,name=door,proto3" json:"door,omitempty"`
	WLeak             bool    `protobuf:"varint,12,opt,name=wLeak,proto3" json:"wLeak,omitempty"`
	UserID            int64   `protobuf:"varint,13,opt,name=userID,proto3" json:"userID,omitempty"`
	IpAddress         string  `protobuf:"bytes,14,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	IsTimeLimitActive bool    `protobuf:"varint,15,opt,name=isTimeLimitActive,proto3" json:"isTimeLimitActive,omitempty"`
	AlarmStartTime    float32 `protobuf:"fixed32,16,opt,name=alarmStartTime,proto3" json:"alarmStartTime,omitempty"`
	AlarmStopTime     float32 `protobuf:"fixed32,17,opt,name=alarmStopTime,proto3" json:"alarmStopTime,omitempty"`
	ZoneCategoryID    int64   `protobuf:"varint,18,opt,name=zoneCategoryID,proto3" json:"zoneCategoryID,omitempty"`
	IsActive          bool    `protobuf:"varint,19,opt,name=isActive,proto3" json:"isActive,omitempty"`
	ZoneName          string  `protobuf:"bytes,20,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	DeviceName        string  `protobuf:"bytes,21,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	UserName          string  `protobuf:"bytes,22,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *OrganizationAlarm) Reset() {
	*x = OrganizationAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationAlarm) ProtoMessage() {}

func (x *OrganizationAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationAlarm.ProtoReflect.Descriptor instead.
func (*OrganizationAlarm) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{1}
}

func (x *OrganizationAlarm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrganizationAlarm) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *OrganizationAlarm) GetMinTreshold() float32 {
	if x != nil {
		return x.MinTreshold
	}
	return 0
}

func (x *OrganizationAlarm) GetMaxTreshold() float32 {
	if x != nil {
		return x.MaxTreshold
	}
	return 0
}

func (x *OrganizationAlarm) GetSms() bool {
	if x != nil {
		return x.Sms
	}
	return false
}

func (x *OrganizationAlarm) GetEmail() bool {
	if x != nil {
		return x.Email
	}
	return false
}

func (x *OrganizationAlarm) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

func (x *OrganizationAlarm) GetTemperature() bool {
	if x != nil {
		return x.Temperature
	}
	return false
}

func (x *OrganizationAlarm) GetHumadity() bool {
	if x != nil {
		return x.Humadity
	}
	return false
}

func (x *OrganizationAlarm) GetEc() bool {
	if x != nil {
		return x.Ec
	}
	return false
}

func (x *OrganizationAlarm) GetDoor() bool {
	if x != nil {
		return x.Door
	}
	return false
}

func (x *OrganizationAlarm) GetWLeak() bool {
	if x != nil {
		return x.WLeak
	}
	return false
}

func (x *OrganizationAlarm) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OrganizationAlarm) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *OrganizationAlarm) GetIsTimeLimitActive() bool {
	if x != nil {
		return x.IsTimeLimitActive
	}
	return false
}

func (x *OrganizationAlarm) GetAlarmStartTime() float32 {
	if x != nil {
		return x.AlarmStartTime
	}
	return 0
}

func (x *OrganizationAlarm) GetAlarmStopTime() float32 {
	if x != nil {
		return x.AlarmStopTime
	}
	return 0
}

func (x *OrganizationAlarm) GetZoneCategoryID() int64 {
	if x != nil {
		return x.ZoneCategoryID
	}
	return 0
}

func (x *OrganizationAlarm) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *OrganizationAlarm) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *OrganizationAlarm) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *OrganizationAlarm) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type AlarmWithDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DevEui            string  `protobuf:"bytes,2,opt,name=devEui,proto3" json:"devEui,omitempty"`
	MinTreshold       float32 `protobuf:"fixed32,3,opt,name=minTreshold,proto3" json:"minTreshold,omitempty"`
	MaxTreshold       float32 `protobuf:"fixed32,4,opt,name=maxTreshold,proto3" json:"maxTreshold,omitempty"`
	Sms               bool    `protobuf:"varint,5,opt,name=sms,proto3" json:"sms,omitempty"`
	Email             bool    `protobuf:"varint,6,opt,name=email,proto3" json:"email,omitempty"`
	Notification      bool    `protobuf:"varint,7,opt,name=notification,proto3" json:"notification,omitempty"`
	Temperature       bool    `protobuf:"varint,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humadity          bool    `protobuf:"varint,9,opt,name=humadity,proto3" json:"humadity,omitempty"`
	Ec                bool    `protobuf:"varint,10,opt,name=ec,proto3" json:"ec,omitempty"`
	Door              bool    `protobuf:"varint,11,opt,name=door,proto3" json:"door,omitempty"`
	WLeak             bool    `protobuf:"varint,12,opt,name=wLeak,proto3" json:"wLeak,omitempty"`
	UserID            int64   `protobuf:"varint,13,opt,name=userID,proto3" json:"userID,omitempty"`
	IpAddress         string  `protobuf:"bytes,14,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	IsTimeLimitActive bool    `protobuf:"varint,15,opt,name=isTimeLimitActive,proto3" json:"isTimeLimitActive,omitempty"`
	ZoneCategoryID    int64   `protobuf:"varint,16,opt,name=zoneCategoryID,proto3" json:"zoneCategoryID,omitempty"`
	IsActive          bool    `protobuf:"varint,17,opt,name=isActive,proto3" json:"isActive,omitempty"`
	AlarmStartTime2   float32 `protobuf:"fixed32,18,opt,name=alarmStartTime2,proto3" json:"alarmStartTime2,omitempty"`
	AlarmStopTime2    float32 `protobuf:"fixed32,19,opt,name=alarmStopTime2,proto3" json:"alarmStopTime2,omitempty"`
	AlarmDay          int64   `protobuf:"varint,20,opt,name=alarmDay,proto3" json:"alarmDay,omitempty"`
	AlarmStartTime    int64   `protobuf:"varint,21,opt,name=alarmStartTime,proto3" json:"alarmStartTime,omitempty"`
	AlarmEndTime      int64   `protobuf:"varint,22,opt,name=alarmEndTime,proto3" json:"alarmEndTime,omitempty"`
}

func (x *AlarmWithDates) Reset() {
	*x = AlarmWithDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmWithDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmWithDates) ProtoMessage() {}

func (x *AlarmWithDates) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmWithDates.ProtoReflect.Descriptor instead.
func (*AlarmWithDates) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{2}
}

func (x *AlarmWithDates) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmWithDates) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *AlarmWithDates) GetMinTreshold() float32 {
	if x != nil {
		return x.MinTreshold
	}
	return 0
}

func (x *AlarmWithDates) GetMaxTreshold() float32 {
	if x != nil {
		return x.MaxTreshold
	}
	return 0
}

func (x *AlarmWithDates) GetSms() bool {
	if x != nil {
		return x.Sms
	}
	return false
}

func (x *AlarmWithDates) GetEmail() bool {
	if x != nil {
		return x.Email
	}
	return false
}

func (x *AlarmWithDates) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

func (x *AlarmWithDates) GetTemperature() bool {
	if x != nil {
		return x.Temperature
	}
	return false
}

func (x *AlarmWithDates) GetHumadity() bool {
	if x != nil {
		return x.Humadity
	}
	return false
}

func (x *AlarmWithDates) GetEc() bool {
	if x != nil {
		return x.Ec
	}
	return false
}

func (x *AlarmWithDates) GetDoor() bool {
	if x != nil {
		return x.Door
	}
	return false
}

func (x *AlarmWithDates) GetWLeak() bool {
	if x != nil {
		return x.WLeak
	}
	return false
}

func (x *AlarmWithDates) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AlarmWithDates) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AlarmWithDates) GetIsTimeLimitActive() bool {
	if x != nil {
		return x.IsTimeLimitActive
	}
	return false
}

func (x *AlarmWithDates) GetZoneCategoryID() int64 {
	if x != nil {
		return x.ZoneCategoryID
	}
	return 0
}

func (x *AlarmWithDates) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *AlarmWithDates) GetAlarmStartTime2() float32 {
	if x != nil {
		return x.AlarmStartTime2
	}
	return 0
}

func (x *AlarmWithDates) GetAlarmStopTime2() float32 {
	if x != nil {
		return x.AlarmStopTime2
	}
	return 0
}

func (x *AlarmWithDates) GetAlarmDay() int64 {
	if x != nil {
		return x.AlarmDay
	}
	return 0
}

func (x *AlarmWithDates) GetAlarmStartTime() int64 {
	if x != nil {
		return x.AlarmStartTime
	}
	return 0
}

func (x *AlarmWithDates) GetAlarmEndTime() int64 {
	if x != nil {
		return x.AlarmEndTime
	}
	return 0
}

type AlarmDateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AlarmId        int64   `protobuf:"varint,2,opt,name=alarmId,proto3" json:"alarmId,omitempty"`
	AlarmDay       int64   `protobuf:"varint,3,opt,name=alarmDay,proto3" json:"alarmDay,omitempty"`
	AlarmStartTime float32 `protobuf:"fixed32,4,opt,name=alarmStartTime,proto3" json:"alarmStartTime,omitempty"`
	AlarmEndTime   float32 `protobuf:"fixed32,5,opt,name=alarmEndTime,proto3" json:"alarmEndTime,omitempty"`
}

func (x *AlarmDateFilter) Reset() {
	*x = AlarmDateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDateFilter) ProtoMessage() {}

func (x *AlarmDateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDateFilter.ProtoReflect.Descriptor instead.
func (*AlarmDateFilter) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{3}
}

func (x *AlarmDateFilter) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AlarmDateFilter) GetAlarmId() int64 {
	if x != nil {
		return x.AlarmId
	}
	return 0
}

func (x *AlarmDateFilter) GetAlarmDay() int64 {
	if x != nil {
		return x.AlarmDay
	}
	return 0
}

func (x *AlarmDateFilter) GetAlarmStartTime() float32 {
	if x != nil {
		return x.AlarmStartTime
	}
	return 0
}

func (x *AlarmDateFilter) GetAlarmEndTime() float32 {
	if x != nil {
		return x.AlarmEndTime
	}
	return 0
}

type ColdRoomRestrictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DevEui      string `protobuf:"bytes,2,opt,name=devEui,proto3" json:"devEui,omitempty"`
	AlarmID     int64  `protobuf:"varint,3,opt,name=alarmID,proto3" json:"alarmID,omitempty"`
	DefrostTime int64  `protobuf:"varint,4,opt,name=defrostTime,proto3" json:"defrostTime,omitempty"`
	DefrostFrq  int64  `protobuf:"varint,5,opt,name=defrostFrq,proto3" json:"defrostFrq,omitempty"`
	AlarmTime   int64  `protobuf:"varint,6,opt,name=alarmTime,proto3" json:"alarmTime,omitempty"`
}

func (x *ColdRoomRestrictions) Reset() {
	*x = ColdRoomRestrictions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColdRoomRestrictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdRoomRestrictions) ProtoMessage() {}

func (x *ColdRoomRestrictions) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdRoomRestrictions.ProtoReflect.Descriptor instead.
func (*ColdRoomRestrictions) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{4}
}

func (x *ColdRoomRestrictions) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ColdRoomRestrictions) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ColdRoomRestrictions) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *ColdRoomRestrictions) GetDefrostTime() int64 {
	if x != nil {
		return x.DefrostTime
	}
	return 0
}

func (x *ColdRoomRestrictions) GetDefrostFrq() int64 {
	if x != nil {
		return x.DefrostFrq
	}
	return 0
}

func (x *ColdRoomRestrictions) GetAlarmTime() int64 {
	if x != nil {
		return x.AlarmTime
	}
	return 0
}

type AlarmDateTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AlarmId        int64   `protobuf:"varint,2,opt,name=alarm_id,json=alarmId,proto3" json:"alarm_id,omitempty"`
	AlarmDay       int64   `protobuf:"varint,3,opt,name=alarm_day,json=alarmDay,proto3" json:"alarm_day,omitempty"`
	AlarmStartTime float32 `protobuf:"fixed32,4,opt,name=alarm_start_time,json=alarmStartTime,proto3" json:"alarm_start_time,omitempty"`
	AlarmEndTime   float32 `protobuf:"fixed32,5,opt,name=alarm_end_time,json=alarmEndTime,proto3" json:"alarm_end_time,omitempty"`
}

func (x *AlarmDateTime) Reset() {
	*x = AlarmDateTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDateTime) ProtoMessage() {}

func (x *AlarmDateTime) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDateTime.ProtoReflect.Descriptor instead.
func (*AlarmDateTime) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{5}
}

func (x *AlarmDateTime) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmDateTime) GetAlarmId() int64 {
	if x != nil {
		return x.AlarmId
	}
	return 0
}

func (x *AlarmDateTime) GetAlarmDay() int64 {
	if x != nil {
		return x.AlarmDay
	}
	return 0
}

func (x *AlarmDateTime) GetAlarmStartTime() float32 {
	if x != nil {
		return x.AlarmStartTime
	}
	return 0
}

func (x *AlarmDateTime) GetAlarmEndTime() float32 {
	if x != nil {
		return x.AlarmEndTime
	}
	return 0
}

type CreateAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alarm *Alarm `protobuf:"bytes,1,opt,name=alarm,proto3" json:"alarm,omitempty"`
}

func (x *CreateAlarmRequest) Reset() {
	*x = CreateAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmRequest) ProtoMessage() {}

func (x *CreateAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmRequest.ProtoReflect.Descriptor instead.
func (*CreateAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAlarmRequest) GetAlarm() *Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

type CreateAlarmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alarm *Alarm `protobuf:"bytes,1,opt,name=alarm,proto3" json:"alarm,omitempty"`
}

func (x *CreateAlarmResponse) Reset() {
	*x = CreateAlarmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmResponse) ProtoMessage() {}

func (x *CreateAlarmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmResponse.ProtoReflect.Descriptor instead.
func (*CreateAlarmResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{7}
}

func (x *CreateAlarmResponse) GetAlarm() *Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

type GetAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64 `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`
}

func (x *GetAlarmRequest) Reset() {
	*x = GetAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmRequest) ProtoMessage() {}

func (x *GetAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmRequest.ProtoReflect.Descriptor instead.
func (*GetAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{8}
}

func (x *GetAlarmRequest) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

type GetAlarmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alarm *Alarm `protobuf:"bytes,1,opt,name=alarm,proto3" json:"alarm,omitempty"`
}

func (x *GetAlarmResponse) Reset() {
	*x = GetAlarmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmResponse) ProtoMessage() {}

func (x *GetAlarmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmResponse.ProtoReflect.Descriptor instead.
func (*GetAlarmResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{9}
}

func (x *GetAlarmResponse) GetAlarm() *Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

type UpdateAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID string `protobuf:"bytes,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`
	Alarm   *Alarm `protobuf:"bytes,2,opt,name=alarm,proto3" json:"alarm,omitempty"`
}

func (x *UpdateAlarmRequest) Reset() {
	*x = UpdateAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlarmRequest) ProtoMessage() {}

func (x *UpdateAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlarmRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAlarmRequest) GetAlarmID() string {
	if x != nil {
		return x.AlarmID
	}
	return ""
}

func (x *UpdateAlarmRequest) GetAlarm() *Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

type GetAlarmLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevEui string `protobuf:"bytes,1,opt,name=devEui,proto3" json:"devEui,omitempty"`
}

func (x *GetAlarmLogsRequest) Reset() {
	*x = GetAlarmLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmLogsRequest) ProtoMessage() {}

func (x *GetAlarmLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAlarmLogsRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{11}
}

func (x *GetAlarmLogsRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

type GetAlarmLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespLog []*AlarmLogs `protobuf:"bytes,1,rep,name=respLog,proto3" json:"respLog,omitempty"`
}

func (x *GetAlarmLogsResponse) Reset() {
	*x = GetAlarmLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmLogsResponse) ProtoMessage() {}

func (x *GetAlarmLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAlarmLogsResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{12}
}

func (x *GetAlarmLogsResponse) GetRespLog() []*AlarmLogs {
	if x != nil {
		return x.RespLog
	}
	return nil
}

type CreateColdRoomRestrictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColdRes *ColdRoomRestrictions `protobuf:"bytes,1,opt,name=coldRes,proto3" json:"coldRes,omitempty"`
}

func (x *CreateColdRoomRestrictionsRequest) Reset() {
	*x = CreateColdRoomRestrictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateColdRoomRestrictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateColdRoomRestrictionsRequest) ProtoMessage() {}

func (x *CreateColdRoomRestrictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateColdRoomRestrictionsRequest.ProtoReflect.Descriptor instead.
func (*CreateColdRoomRestrictionsRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{13}
}

func (x *CreateColdRoomRestrictionsRequest) GetColdRes() *ColdRoomRestrictions {
	if x != nil {
		return x.ColdRes
	}
	return nil
}

type CreateAlarmDatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqFilter []*AlarmDateFilter `protobuf:"bytes,1,rep,name=reqFilter,proto3" json:"reqFilter,omitempty"`
}

func (x *CreateAlarmDatesRequest) Reset() {
	*x = CreateAlarmDatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmDatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmDatesRequest) ProtoMessage() {}

func (x *CreateAlarmDatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmDatesRequest.ProtoReflect.Descriptor instead.
func (*CreateAlarmDatesRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAlarmDatesRequest) GetReqFilter() []*AlarmDateFilter {
	if x != nil {
		return x.ReqFilter
	}
	return nil
}

type CreateAlarmDatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespDateTime []*AlarmDateTime `protobuf:"bytes,1,rep,name=respDateTime,proto3" json:"respDateTime,omitempty"`
}

func (x *CreateAlarmDatesResponse) Reset() {
	*x = CreateAlarmDatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmDatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmDatesResponse) ProtoMessage() {}

func (x *CreateAlarmDatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmDatesResponse.ProtoReflect.Descriptor instead.
func (*CreateAlarmDatesResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAlarmDatesResponse) GetRespDateTime() []*AlarmDateTime {
	if x != nil {
		return x.RespDateTime
	}
	return nil
}

type GetAlarmDatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmId int64 `protobuf:"varint,1,opt,name=alarmId,proto3" json:"alarmId,omitempty"`
}

func (x *GetAlarmDatesRequest) Reset() {
	*x = GetAlarmDatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmDatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmDatesRequest) ProtoMessage() {}

func (x *GetAlarmDatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmDatesRequest.ProtoReflect.Descriptor instead.
func (*GetAlarmDatesRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{16}
}

func (x *GetAlarmDatesRequest) GetAlarmId() int64 {
	if x != nil {
		return x.AlarmId
	}
	return 0
}

type GetAlarmDatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespDate []*AlarmDateTime `protobuf:"bytes,1,rep,name=respDate,proto3" json:"respDate,omitempty"`
}

func (x *GetAlarmDatesResponse) Reset() {
	*x = GetAlarmDatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmDatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmDatesResponse) ProtoMessage() {}

func (x *GetAlarmDatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmDatesResponse.ProtoReflect.Descriptor instead.
func (*GetAlarmDatesResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{17}
}

func (x *GetAlarmDatesResponse) GetRespDate() []*AlarmDateTime {
	if x != nil {
		return x.RespDate
	}
	return nil
}

type DeleteAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID   string `protobuf:"bytes,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`
	UserID    int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
}

func (x *DeleteAlarmRequest) Reset() {
	*x = DeleteAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmRequest) ProtoMessage() {}

func (x *DeleteAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteAlarmRequest) GetAlarmID() string {
	if x != nil {
		return x.AlarmID
	}
	return ""
}

func (x *DeleteAlarmRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DeleteAlarmRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

type DeleteUserAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *DeleteUserAlarmRequest) Reset() {
	*x = DeleteUserAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserAlarmRequest) ProtoMessage() {}

func (x *DeleteUserAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserAlarmRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteUserAlarmRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type DeleteSensorAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevEuis []string `protobuf:"bytes,1,rep,name=devEuis,proto3" json:"devEuis,omitempty"`
}

func (x *DeleteSensorAlarmRequest) Reset() {
	*x = DeleteSensorAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSensorAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSensorAlarmRequest) ProtoMessage() {}

func (x *DeleteSensorAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSensorAlarmRequest.ProtoReflect.Descriptor instead.
func (*DeleteSensorAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSensorAlarmRequest) GetDevEuis() []string {
	if x != nil {
		return x.DevEuis
	}
	return nil
}

type DeleteZoneAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zones []int64 `protobuf:"varint,1,rep,packed,name=zones,proto3" json:"zones,omitempty"`
}

func (x *DeleteZoneAlarmRequest) Reset() {
	*x = DeleteZoneAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZoneAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZoneAlarmRequest) ProtoMessage() {}

func (x *DeleteZoneAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZoneAlarmRequest.ProtoReflect.Descriptor instead.
func (*DeleteZoneAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteZoneAlarmRequest) GetZones() []int64 {
	if x != nil {
		return x.Zones
	}
	return nil
}

type DeleteAlarmDevEuiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deveui string `protobuf:"bytes,1,opt,name=deveui,proto3" json:"deveui,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteAlarmDevEuiRequest) Reset() {
	*x = DeleteAlarmDevEuiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmDevEuiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmDevEuiRequest) ProtoMessage() {}

func (x *DeleteAlarmDevEuiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmDevEuiRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlarmDevEuiRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAlarmDevEuiRequest) GetDeveui() string {
	if x != nil {
		return x.Deveui
	}
	return ""
}

func (x *DeleteAlarmDevEuiRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteAlarmDatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmId string `protobuf:"bytes,1,opt,name=alarmId,proto3" json:"alarmId,omitempty"`
}

func (x *DeleteAlarmDatesRequest) Reset() {
	*x = DeleteAlarmDatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmDatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmDatesRequest) ProtoMessage() {}

func (x *DeleteAlarmDatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmDatesRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlarmDatesRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteAlarmDatesRequest) GetAlarmId() string {
	if x != nil {
		return x.AlarmId
	}
	return ""
}

type CreateAlarmLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alarm     *Alarm `protobuf:"bytes,1,opt,name=alarm,proto3" json:"alarm,omitempty"`
	UserID    int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	IsDeleted int64  `protobuf:"varint,4,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
}

func (x *CreateAlarmLogRequest) Reset() {
	*x = CreateAlarmLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmLogRequest) ProtoMessage() {}

func (x *CreateAlarmLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmLogRequest.ProtoReflect.Descriptor instead.
func (*CreateAlarmLogRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAlarmLogRequest) GetAlarm() *Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

func (x *CreateAlarmLogRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CreateAlarmLogRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CreateAlarmLogRequest) GetIsDeleted() int64 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type GetAlarmListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *AlarmFilters `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetAlarmListRequest) Reset() {
	*x = GetAlarmListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmListRequest) ProtoMessage() {}

func (x *GetAlarmListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmListRequest.ProtoReflect.Descriptor instead.
func (*GetAlarmListRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{25}
}

func (x *GetAlarmListRequest) GetFilter() *AlarmFilters {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAlarmListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespList []*Alarm `protobuf:"bytes,1,rep,name=respList,proto3" json:"respList,omitempty"`
}

func (x *GetAlarmListResponse) Reset() {
	*x = GetAlarmListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmListResponse) ProtoMessage() {}

func (x *GetAlarmListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmListResponse.ProtoReflect.Descriptor instead.
func (*GetAlarmListResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{26}
}

func (x *GetAlarmListResponse) GetRespList() []*Alarm {
	if x != nil {
		return x.RespList
	}
	return nil
}

type GetOrganizationAlarmListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationID int64 `protobuf:"varint,1,opt,name=organizationID,proto3" json:"organizationID,omitempty"`
}

func (x *GetOrganizationAlarmListRequest) Reset() {
	*x = GetOrganizationAlarmListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationAlarmListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationAlarmListRequest) ProtoMessage() {}

func (x *GetOrganizationAlarmListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationAlarmListRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationAlarmListRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{27}
}

func (x *GetOrganizationAlarmListRequest) GetOrganizationID() int64 {
	if x != nil {
		return x.OrganizationID
	}
	return 0
}

type GetOrganizationAlarmListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespList []*OrganizationAlarm `protobuf:"bytes,1,rep,name=respList,proto3" json:"respList,omitempty"`
}

func (x *GetOrganizationAlarmListResponse) Reset() {
	*x = GetOrganizationAlarmListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationAlarmListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationAlarmListResponse) ProtoMessage() {}

func (x *GetOrganizationAlarmListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationAlarmListResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationAlarmListResponse) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{28}
}

func (x *GetOrganizationAlarmListResponse) GetRespList() []*OrganizationAlarm {
	if x != nil {
		return x.RespList
	}
	return nil
}

type CheckAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName  string       `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Application *Application `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"`
	Device      *Device      `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	ObjectJSON  string       `protobuf:"bytes,4,opt,name=objectJSON,proto3" json:"objectJSON,omitempty"`
}

func (x *CheckAlarmRequest) Reset() {
	*x = CheckAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAlarmRequest) ProtoMessage() {}

func (x *CheckAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAlarmRequest.ProtoReflect.Descriptor instead.
func (*CheckAlarmRequest) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{29}
}

func (x *CheckAlarmRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *CheckAlarmRequest) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *CheckAlarmRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *CheckAlarmRequest) GetObjectJSON() string {
	if x != nil {
		return x.ObjectJSON
	}
	return ""
}

type AlarmLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevEui         string               `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	MinTreshold    float32              `protobuf:"fixed32,2,opt,name=minTreshold,proto3" json:"minTreshold,omitempty"`
	UserId         int64                `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	IpAddress      string               `protobuf:"bytes,4,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	IsDeleted      int64                `protobuf:"varint,5,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	Temperature    bool                 `protobuf:"varint,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humadity       bool                 `protobuf:"varint,7,opt,name=humadity,proto3" json:"humadity,omitempty"`
	Ec             bool                 `protobuf:"varint,8,opt,name=ec,proto3" json:"ec,omitempty"`
	Door           bool                 `protobuf:"varint,9,opt,name=door,proto3" json:"door,omitempty"`
	WLeak          bool                 `protobuf:"varint,10,opt,name=w_leak,json=wLeak,proto3" json:"w_leak,omitempty"`
	Sms            bool                 `protobuf:"varint,11,opt,name=sms,proto3" json:"sms,omitempty"`
	MaxTreshold    float32              `protobuf:"fixed32,12,opt,name=maxTreshold,proto3" json:"maxTreshold,omitempty"`
	SubmissionDate *timestamp.Timestamp `protobuf:"bytes,13,opt,name=submission_date,json=submissionDate,proto3" json:"submission_date,omitempty"`
}

func (x *AlarmLogs) Reset() {
	*x = AlarmLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogs) ProtoMessage() {}

func (x *AlarmLogs) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogs.ProtoReflect.Descriptor instead.
func (*AlarmLogs) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{30}
}

func (x *AlarmLogs) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *AlarmLogs) GetMinTreshold() float32 {
	if x != nil {
		return x.MinTreshold
	}
	return 0
}

func (x *AlarmLogs) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AlarmLogs) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AlarmLogs) GetIsDeleted() int64 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

func (x *AlarmLogs) GetTemperature() bool {
	if x != nil {
		return x.Temperature
	}
	return false
}

func (x *AlarmLogs) GetHumadity() bool {
	if x != nil {
		return x.Humadity
	}
	return false
}

func (x *AlarmLogs) GetEc() bool {
	if x != nil {
		return x.Ec
	}
	return false
}

func (x *AlarmLogs) GetDoor() bool {
	if x != nil {
		return x.Door
	}
	return false
}

func (x *AlarmLogs) GetWLeak() bool {
	if x != nil {
		return x.WLeak
	}
	return false
}

func (x *AlarmLogs) GetSms() bool {
	if x != nil {
		return x.Sms
	}
	return false
}

func (x *AlarmLogs) GetMaxTreshold() float32 {
	if x != nil {
		return x.MaxTreshold
	}
	return 0
}

func (x *AlarmLogs) GetSubmissionDate() *timestamp.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

type AlarmFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	DevEui string `protobuf:"bytes,2,opt,name=devEui,proto3" json:"devEui,omitempty"`
	UserID int64  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *AlarmFilters) Reset() {
	*x = AlarmFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmFilters) ProtoMessage() {}

func (x *AlarmFilters) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmFilters.ProtoReflect.Descriptor instead.
func (*AlarmFilters) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{31}
}

func (x *AlarmFilters) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AlarmFilters) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *AlarmFilters) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	OrganizationId       int64  `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ServiceProfileId     string `protobuf:"bytes,5,opt,name=service_profile_id,json=serviceProfileId,proto3" json:"service_profile_id,omitempty"`
	PayloadCodec         string `protobuf:"bytes,6,opt,name=payload_codec,json=payloadCodec,proto3" json:"payload_codec,omitempty"`
	PayloadEncoderScript string `protobuf:"bytes,7,opt,name=payload_encoder_script,json=payloadEncoderScript,proto3" json:"payload_encoder_script,omitempty"`
	PayloadDecoderScript string `protobuf:"bytes,8,opt,name=payload_decoder_script,json=payloadDecoderScript,proto3" json:"payload_decoder_script,omitempty"`
	MQTTTLSCert          []byte `protobuf:"bytes,9,opt,name=MQTTTLSCert,proto3" json:"MQTTTLSCert,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{32}
}

func (x *Application) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *Application) GetServiceProfileId() string {
	if x != nil {
		return x.ServiceProfileId
	}
	return ""
}

func (x *Application) GetPayloadCodec() string {
	if x != nil {
		return x.PayloadCodec
	}
	return ""
}

func (x *Application) GetPayloadEncoderScript() string {
	if x != nil {
		return x.PayloadEncoderScript
	}
	return ""
}

func (x *Application) GetPayloadDecoderScript() string {
	if x != nil {
		return x.PayloadDecoderScript
	}
	return ""
}

func (x *Application) GetMQTTTLSCert() []byte {
	if x != nil {
		return x.MQTTTLSCert
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevEui            string            `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApplicationId     int64             `protobuf:"varint,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Description       string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DeviceProfileId   string            `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileId,proto3" json:"device_profile_id,omitempty"`
	SkipFCntCheck     bool              `protobuf:"varint,6,opt,name=skip_f_cnt_check,json=skipFCntCheck,proto3" json:"skip_f_cnt_check,omitempty"`
	ReferenceAltitude float64           `protobuf:"fixed64,7,opt,name=reference_altitude,json=referenceAltitude,proto3" json:"reference_altitude,omitempty"`
	Variables         map[string]string `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags              map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsDisabled        bool              `protobuf:"varint,10,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	DataTime          int64             `protobuf:"varint,11,opt,name=data_time,json=dataTime,proto3" json:"data_time,omitempty"`
	Lat               float64           `protobuf:"fixed64,12,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng               float64           `protobuf:"fixed64,13,opt,name=lng,proto3" json:"lng,omitempty"`
	DeviceProfileName string            `protobuf:"bytes,14,opt,name=device_profile_name,json=deviceProfileName,proto3" json:"device_profile_name,omitempty"`
	DeviceType        int64             `protobuf:"varint,15,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	OrganizationId    int64             `protobuf:"varint,16,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ZoneId            int64             `protobuf:"varint,17,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{33}
}

func (x *Device) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *Device) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Device) GetDeviceProfileId() string {
	if x != nil {
		return x.DeviceProfileId
	}
	return ""
}

func (x *Device) GetSkipFCntCheck() bool {
	if x != nil {
		return x.SkipFCntCheck
	}
	return false
}

func (x *Device) GetReferenceAltitude() float64 {
	if x != nil {
		return x.ReferenceAltitude
	}
	return 0
}

func (x *Device) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Device) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Device) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *Device) GetDataTime() int64 {
	if x != nil {
		return x.DataTime
	}
	return 0
}

func (x *Device) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Device) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Device) GetDeviceProfileName() string {
	if x != nil {
		return x.DeviceProfileName
	}
	return ""
}

func (x *Device) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *Device) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *Device) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_als_als_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_als_als_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_als_als_proto_rawDescGZIP(), []int{34}
}

var File_als_als_proto protoreflect.FileDescriptor

var file_als_als_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x6c, 0x73, 0x2f, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x6c, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xad, 0x04, 0x0a, 0x05, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x45, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x45, 0x75, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0x91, 0x05, 0x0a, 0x11, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x45,
	0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75, 0x69,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x65, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x7a, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x05, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x45, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75,
	0x69, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x65, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x6f, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x45, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45,
	0x75, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x46, 0x72, 0x71, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x46, 0x72, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x0d, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x44, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x6c,
	0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x22, 0x37,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x6c, 0x73, 0x2e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x22, 0x2d, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75, 0x69, 0x22, 0x40, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x22, 0x58, 0x0a,
	0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x76, 0x45, 0x75, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65,
	0x76, 0x45, 0x75, 0x69, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a,
	0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05,
	0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x45, 0x75, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x65, 0x75, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6c, 0x73, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x11,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0x8c, 0x03, 0x0a, 0x09, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f,
	0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75,
	0x69, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d,
	0x61, 0x64, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x75, 0x6d,
	0x61, 0x64, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x5f, 0x6c,
	0x65, 0x61, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x4c, 0x65, 0x61, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x0c, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x45, 0x75, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0xdd, 0x02, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x63, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x51, 0x54, 0x54, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x4d, 0x51, 0x54, 0x54, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x22,
	0xd3, 0x05, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x45, 0x75, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x66, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x46, 0x43, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x6c, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x1a, 0x3c,
	0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x06, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x32, 0x91, 0x0a,
	0x0a, 0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61,
	0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x12, 0x14, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x6c, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x6c,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x61, 0x6c, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x12, 0x1b, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x1d, 0x2e, 0x61,
	0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a,
	0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x1b, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65,
	0x76, 0x45, 0x75, 0x69, 0x12, 0x1d, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x45, 0x75, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x61,
	0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x6c, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x64, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x64,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12,
	0x16, 0x2e, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x45, 0x0a, 0x15, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x73, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x62, 0x72, 0x61, 0x68, 0x69, 0x6d, 0x6f, 0x7a,
	0x65, 0x6b, 0x69, 0x63, 0x69, 0x2f, 0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_als_als_proto_rawDescOnce sync.Once
	file_als_als_proto_rawDescData = file_als_als_proto_rawDesc
)

func file_als_als_proto_rawDescGZIP() []byte {
	file_als_als_proto_rawDescOnce.Do(func() {
		file_als_als_proto_rawDescData = protoimpl.X.CompressGZIP(file_als_als_proto_rawDescData)
	})
	return file_als_als_proto_rawDescData
}

var file_als_als_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_als_als_proto_goTypes = []interface{}{
	(*Alarm)(nil),                             // 0: als.Alarm
	(*OrganizationAlarm)(nil),                 // 1: als.OrganizationAlarm
	(*AlarmWithDates)(nil),                    // 2: als.AlarmWithDates
	(*AlarmDateFilter)(nil),                   // 3: als.AlarmDateFilter
	(*ColdRoomRestrictions)(nil),              // 4: als.ColdRoomRestrictions
	(*AlarmDateTime)(nil),                     // 5: als.AlarmDateTime
	(*CreateAlarmRequest)(nil),                // 6: als.CreateAlarmRequest
	(*CreateAlarmResponse)(nil),               // 7: als.CreateAlarmResponse
	(*GetAlarmRequest)(nil),                   // 8: als.GetAlarmRequest
	(*GetAlarmResponse)(nil),                  // 9: als.GetAlarmResponse
	(*UpdateAlarmRequest)(nil),                // 10: als.UpdateAlarmRequest
	(*GetAlarmLogsRequest)(nil),               // 11: als.GetAlarmLogsRequest
	(*GetAlarmLogsResponse)(nil),              // 12: als.GetAlarmLogsResponse
	(*CreateColdRoomRestrictionsRequest)(nil), // 13: als.CreateColdRoomRestrictionsRequest
	(*CreateAlarmDatesRequest)(nil),           // 14: als.CreateAlarmDatesRequest
	(*CreateAlarmDatesResponse)(nil),          // 15: als.CreateAlarmDatesResponse
	(*GetAlarmDatesRequest)(nil),              // 16: als.GetAlarmDatesRequest
	(*GetAlarmDatesResponse)(nil),             // 17: als.GetAlarmDatesResponse
	(*DeleteAlarmRequest)(nil),                // 18: als.DeleteAlarmRequest
	(*DeleteUserAlarmRequest)(nil),            // 19: als.DeleteUserAlarmRequest
	(*DeleteSensorAlarmRequest)(nil),          // 20: als.DeleteSensorAlarmRequest
	(*DeleteZoneAlarmRequest)(nil),            // 21: als.DeleteZoneAlarmRequest
	(*DeleteAlarmDevEuiRequest)(nil),          // 22: als.DeleteAlarmDevEuiRequest
	(*DeleteAlarmDatesRequest)(nil),           // 23: als.DeleteAlarmDatesRequest
	(*CreateAlarmLogRequest)(nil),             // 24: als.CreateAlarmLogRequest
	(*GetAlarmListRequest)(nil),               // 25: als.GetAlarmListRequest
	(*GetAlarmListResponse)(nil),              // 26: als.GetAlarmListResponse
	(*GetOrganizationAlarmListRequest)(nil),   // 27: als.GetOrganizationAlarmListRequest
	(*GetOrganizationAlarmListResponse)(nil),  // 28: als.GetOrganizationAlarmListResponse
	(*CheckAlarmRequest)(nil),                 // 29: als.CheckAlarmRequest
	(*AlarmLogs)(nil),                         // 30: als.AlarmLogs
	(*AlarmFilters)(nil),                      // 31: als.AlarmFilters
	(*Application)(nil),                       // 32: als.Application
	(*Device)(nil),                            // 33: als.Device
	(*User)(nil),                              // 34: als.User
	nil,                                       // 35: als.Device.VariablesEntry
	nil,                                       // 36: als.Device.TagsEntry
	(*timestamp.Timestamp)(nil),               // 37: google.protobuf.Timestamp
	(*empty.Empty)(nil),                       // 38: google.protobuf.Empty
}
var file_als_als_proto_depIdxs = []int32{
	0,  // 0: als.CreateAlarmRequest.alarm:type_name -> als.Alarm
	0,  // 1: als.CreateAlarmResponse.alarm:type_name -> als.Alarm
	0,  // 2: als.GetAlarmResponse.alarm:type_name -> als.Alarm
	0,  // 3: als.UpdateAlarmRequest.alarm:type_name -> als.Alarm
	30, // 4: als.GetAlarmLogsResponse.respLog:type_name -> als.AlarmLogs
	4,  // 5: als.CreateColdRoomRestrictionsRequest.coldRes:type_name -> als.ColdRoomRestrictions
	3,  // 6: als.CreateAlarmDatesRequest.reqFilter:type_name -> als.AlarmDateFilter
	5,  // 7: als.CreateAlarmDatesResponse.respDateTime:type_name -> als.AlarmDateTime
	5,  // 8: als.GetAlarmDatesResponse.respDate:type_name -> als.AlarmDateTime
	0,  // 9: als.CreateAlarmLogRequest.alarm:type_name -> als.Alarm
	31, // 10: als.GetAlarmListRequest.filter:type_name -> als.AlarmFilters
	0,  // 11: als.GetAlarmListResponse.respList:type_name -> als.Alarm
	1,  // 12: als.GetOrganizationAlarmListResponse.respList:type_name -> als.OrganizationAlarm
	32, // 13: als.CheckAlarmRequest.application:type_name -> als.Application
	33, // 14: als.CheckAlarmRequest.device:type_name -> als.Device
	37, // 15: als.AlarmLogs.submission_date:type_name -> google.protobuf.Timestamp
	35, // 16: als.Device.variables:type_name -> als.Device.VariablesEntry
	36, // 17: als.Device.tags:type_name -> als.Device.TagsEntry
	6,  // 18: als.AlarmServerService.CreateAlarm:input_type -> als.CreateAlarmRequest
	8,  // 19: als.AlarmServerService.GetAlarm:input_type -> als.GetAlarmRequest
	24, // 20: als.AlarmServerService.CreateAlarmLog:input_type -> als.CreateAlarmLogRequest
	11, // 21: als.AlarmServerService.GetAlarmLogs:input_type -> als.GetAlarmLogsRequest
	14, // 22: als.AlarmServerService.CreateAlarmDates:input_type -> als.CreateAlarmDatesRequest
	16, // 23: als.AlarmServerService.GetAlarmDates:input_type -> als.GetAlarmDatesRequest
	23, // 24: als.AlarmServerService.DeleteAlarmDates:input_type -> als.DeleteAlarmDatesRequest
	18, // 25: als.AlarmServerService.DeleteAlarm:input_type -> als.DeleteAlarmRequest
	19, // 26: als.AlarmServerService.DeleteUserAlarm:input_type -> als.DeleteUserAlarmRequest
	20, // 27: als.AlarmServerService.DeleteSensorAlarm:input_type -> als.DeleteSensorAlarmRequest
	21, // 28: als.AlarmServerService.DeleteZoneAlarm:input_type -> als.DeleteZoneAlarmRequest
	22, // 29: als.AlarmServerService.DeleteAlarmDevEui:input_type -> als.DeleteAlarmDevEuiRequest
	10, // 30: als.AlarmServerService.UpdateAlarm:input_type -> als.UpdateAlarmRequest
	25, // 31: als.AlarmServerService.GetAlarmList:input_type -> als.GetAlarmListRequest
	27, // 32: als.AlarmServerService.GetOrganizationAlarmList:input_type -> als.GetOrganizationAlarmListRequest
	13, // 33: als.AlarmServerService.CreateColdRoomRestrictions:input_type -> als.CreateColdRoomRestrictionsRequest
	29, // 34: als.AlarmServerService.CheckAlarm:input_type -> als.CheckAlarmRequest
	7,  // 35: als.AlarmServerService.CreateAlarm:output_type -> als.CreateAlarmResponse
	9,  // 36: als.AlarmServerService.GetAlarm:output_type -> als.GetAlarmResponse
	38, // 37: als.AlarmServerService.CreateAlarmLog:output_type -> google.protobuf.Empty
	12, // 38: als.AlarmServerService.GetAlarmLogs:output_type -> als.GetAlarmLogsResponse
	15, // 39: als.AlarmServerService.CreateAlarmDates:output_type -> als.CreateAlarmDatesResponse
	17, // 40: als.AlarmServerService.GetAlarmDates:output_type -> als.GetAlarmDatesResponse
	38, // 41: als.AlarmServerService.DeleteAlarmDates:output_type -> google.protobuf.Empty
	38, // 42: als.AlarmServerService.DeleteAlarm:output_type -> google.protobuf.Empty
	38, // 43: als.AlarmServerService.DeleteUserAlarm:output_type -> google.protobuf.Empty
	38, // 44: als.AlarmServerService.DeleteSensorAlarm:output_type -> google.protobuf.Empty
	38, // 45: als.AlarmServerService.DeleteZoneAlarm:output_type -> google.protobuf.Empty
	38, // 46: als.AlarmServerService.DeleteAlarmDevEui:output_type -> google.protobuf.Empty
	38, // 47: als.AlarmServerService.UpdateAlarm:output_type -> google.protobuf.Empty
	26, // 48: als.AlarmServerService.GetAlarmList:output_type -> als.GetAlarmListResponse
	28, // 49: als.AlarmServerService.GetOrganizationAlarmList:output_type -> als.GetOrganizationAlarmListResponse
	38, // 50: als.AlarmServerService.CreateColdRoomRestrictions:output_type -> google.protobuf.Empty
	38, // 51: als.AlarmServerService.CheckAlarm:output_type -> google.protobuf.Empty
	35, // [35:52] is the sub-list for method output_type
	18, // [18:35] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_als_als_proto_init() }
func file_als_als_proto_init() {
	if File_als_als_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_als_als_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmWithDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColdRoomRestrictions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDateTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateColdRoomRestrictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmDatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmDatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmDatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmDatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSensorAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZoneAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmDevEuiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmDatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationAlarmListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationAlarmListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_als_als_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_als_als_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_als_als_proto_goTypes,
		DependencyIndexes: file_als_als_proto_depIdxs,
		MessageInfos:      file_als_als_proto_msgTypes,
	}.Build()
	File_als_als_proto = out.File
	file_als_als_proto_rawDesc = nil
	file_als_als_proto_goTypes = nil
	file_als_als_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlarmServerServiceClient is the client API for AlarmServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlarmServerServiceClient interface {
	// CreateDevice creates the given device.
	CreateAlarm(ctx context.Context, in *CreateAlarmRequest, opts ...grpc.CallOption) (*CreateAlarmResponse, error)
	GetAlarm(ctx context.Context, in *GetAlarmRequest, opts ...grpc.CallOption) (*GetAlarmResponse, error)
	CreateAlarmLog(ctx context.Context, in *CreateAlarmLogRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAlarmLogs(ctx context.Context, in *GetAlarmLogsRequest, opts ...grpc.CallOption) (*GetAlarmLogsResponse, error)
	CreateAlarmDates(ctx context.Context, in *CreateAlarmDatesRequest, opts ...grpc.CallOption) (*CreateAlarmDatesResponse, error)
	GetAlarmDates(ctx context.Context, in *GetAlarmDatesRequest, opts ...grpc.CallOption) (*GetAlarmDatesResponse, error)
	DeleteAlarmDates(ctx context.Context, in *DeleteAlarmDatesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteAlarm(ctx context.Context, in *DeleteAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteUserAlarm(ctx context.Context, in *DeleteUserAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteSensorAlarm(ctx context.Context, in *DeleteSensorAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteZoneAlarm(ctx context.Context, in *DeleteZoneAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteAlarmDevEui(ctx context.Context, in *DeleteAlarmDevEuiRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateAlarm(ctx context.Context, in *UpdateAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAlarmList(ctx context.Context, in *GetAlarmListRequest, opts ...grpc.CallOption) (*GetAlarmListResponse, error)
	GetOrganizationAlarmList(ctx context.Context, in *GetOrganizationAlarmListRequest, opts ...grpc.CallOption) (*GetOrganizationAlarmListResponse, error)
	CreateColdRoomRestrictions(ctx context.Context, in *CreateColdRoomRestrictionsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CheckAlarm(ctx context.Context, in *CheckAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type alarmServerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAlarmServerServiceClient(cc grpc.ClientConnInterface) AlarmServerServiceClient {
	return &alarmServerServiceClient{cc}
}

func (c *alarmServerServiceClient) CreateAlarm(ctx context.Context, in *CreateAlarmRequest, opts ...grpc.CallOption) (*CreateAlarmResponse, error) {
	out := new(CreateAlarmResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/CreateAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) GetAlarm(ctx context.Context, in *GetAlarmRequest, opts ...grpc.CallOption) (*GetAlarmResponse, error) {
	out := new(GetAlarmResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/GetAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) CreateAlarmLog(ctx context.Context, in *CreateAlarmLogRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/CreateAlarmLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) GetAlarmLogs(ctx context.Context, in *GetAlarmLogsRequest, opts ...grpc.CallOption) (*GetAlarmLogsResponse, error) {
	out := new(GetAlarmLogsResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/GetAlarmLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) CreateAlarmDates(ctx context.Context, in *CreateAlarmDatesRequest, opts ...grpc.CallOption) (*CreateAlarmDatesResponse, error) {
	out := new(CreateAlarmDatesResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/CreateAlarmDates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) GetAlarmDates(ctx context.Context, in *GetAlarmDatesRequest, opts ...grpc.CallOption) (*GetAlarmDatesResponse, error) {
	out := new(GetAlarmDatesResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/GetAlarmDates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteAlarmDates(ctx context.Context, in *DeleteAlarmDatesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteAlarmDates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteAlarm(ctx context.Context, in *DeleteAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteUserAlarm(ctx context.Context, in *DeleteUserAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteUserAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteSensorAlarm(ctx context.Context, in *DeleteSensorAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteSensorAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteZoneAlarm(ctx context.Context, in *DeleteZoneAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteZoneAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) DeleteAlarmDevEui(ctx context.Context, in *DeleteAlarmDevEuiRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/DeleteAlarmDevEui", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) UpdateAlarm(ctx context.Context, in *UpdateAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/UpdateAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) GetAlarmList(ctx context.Context, in *GetAlarmListRequest, opts ...grpc.CallOption) (*GetAlarmListResponse, error) {
	out := new(GetAlarmListResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/GetAlarmList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) GetOrganizationAlarmList(ctx context.Context, in *GetOrganizationAlarmListRequest, opts ...grpc.CallOption) (*GetOrganizationAlarmListResponse, error) {
	out := new(GetOrganizationAlarmListResponse)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/GetOrganizationAlarmList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) CreateColdRoomRestrictions(ctx context.Context, in *CreateColdRoomRestrictionsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/CreateColdRoomRestrictions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmServerServiceClient) CheckAlarm(ctx context.Context, in *CheckAlarmRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/als.AlarmServerService/CheckAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlarmServerServiceServer is the server API for AlarmServerService service.
type AlarmServerServiceServer interface {
	// CreateDevice creates the given device.
	CreateAlarm(context.Context, *CreateAlarmRequest) (*CreateAlarmResponse, error)
	GetAlarm(context.Context, *GetAlarmRequest) (*GetAlarmResponse, error)
	CreateAlarmLog(context.Context, *CreateAlarmLogRequest) (*empty.Empty, error)
	GetAlarmLogs(context.Context, *GetAlarmLogsRequest) (*GetAlarmLogsResponse, error)
	CreateAlarmDates(context.Context, *CreateAlarmDatesRequest) (*CreateAlarmDatesResponse, error)
	GetAlarmDates(context.Context, *GetAlarmDatesRequest) (*GetAlarmDatesResponse, error)
	DeleteAlarmDates(context.Context, *DeleteAlarmDatesRequest) (*empty.Empty, error)
	DeleteAlarm(context.Context, *DeleteAlarmRequest) (*empty.Empty, error)
	DeleteUserAlarm(context.Context, *DeleteUserAlarmRequest) (*empty.Empty, error)
	DeleteSensorAlarm(context.Context, *DeleteSensorAlarmRequest) (*empty.Empty, error)
	DeleteZoneAlarm(context.Context, *DeleteZoneAlarmRequest) (*empty.Empty, error)
	DeleteAlarmDevEui(context.Context, *DeleteAlarmDevEuiRequest) (*empty.Empty, error)
	UpdateAlarm(context.Context, *UpdateAlarmRequest) (*empty.Empty, error)
	GetAlarmList(context.Context, *GetAlarmListRequest) (*GetAlarmListResponse, error)
	GetOrganizationAlarmList(context.Context, *GetOrganizationAlarmListRequest) (*GetOrganizationAlarmListResponse, error)
	CreateColdRoomRestrictions(context.Context, *CreateColdRoomRestrictionsRequest) (*empty.Empty, error)
	CheckAlarm(context.Context, *CheckAlarmRequest) (*empty.Empty, error)
}

// UnimplementedAlarmServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAlarmServerServiceServer struct {
}

func (*UnimplementedAlarmServerServiceServer) CreateAlarm(context.Context, *CreateAlarmRequest) (*CreateAlarmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) GetAlarm(context.Context, *GetAlarmRequest) (*GetAlarmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) CreateAlarmLog(context.Context, *CreateAlarmLogRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlarmLog not implemented")
}
func (*UnimplementedAlarmServerServiceServer) GetAlarmLogs(context.Context, *GetAlarmLogsRequest) (*GetAlarmLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlarmLogs not implemented")
}
func (*UnimplementedAlarmServerServiceServer) CreateAlarmDates(context.Context, *CreateAlarmDatesRequest) (*CreateAlarmDatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlarmDates not implemented")
}
func (*UnimplementedAlarmServerServiceServer) GetAlarmDates(context.Context, *GetAlarmDatesRequest) (*GetAlarmDatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlarmDates not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteAlarmDates(context.Context, *DeleteAlarmDatesRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlarmDates not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteAlarm(context.Context, *DeleteAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteUserAlarm(context.Context, *DeleteUserAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteSensorAlarm(context.Context, *DeleteSensorAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSensorAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteZoneAlarm(context.Context, *DeleteZoneAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteZoneAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) DeleteAlarmDevEui(context.Context, *DeleteAlarmDevEuiRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlarmDevEui not implemented")
}
func (*UnimplementedAlarmServerServiceServer) UpdateAlarm(context.Context, *UpdateAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAlarm not implemented")
}
func (*UnimplementedAlarmServerServiceServer) GetAlarmList(context.Context, *GetAlarmListRequest) (*GetAlarmListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlarmList not implemented")
}
func (*UnimplementedAlarmServerServiceServer) GetOrganizationAlarmList(context.Context, *GetOrganizationAlarmListRequest) (*GetOrganizationAlarmListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationAlarmList not implemented")
}
func (*UnimplementedAlarmServerServiceServer) CreateColdRoomRestrictions(context.Context, *CreateColdRoomRestrictionsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateColdRoomRestrictions not implemented")
}
func (*UnimplementedAlarmServerServiceServer) CheckAlarm(context.Context, *CheckAlarmRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAlarm not implemented")
}

func RegisterAlarmServerServiceServer(s *grpc.Server, srv AlarmServerServiceServer) {
	s.RegisterService(&_AlarmServerService_serviceDesc, srv)
}

func _AlarmServerService_CreateAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).CreateAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/CreateAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).CreateAlarm(ctx, req.(*CreateAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_GetAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).GetAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/GetAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).GetAlarm(ctx, req.(*GetAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_CreateAlarmLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAlarmLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).CreateAlarmLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/CreateAlarmLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).CreateAlarmLog(ctx, req.(*CreateAlarmLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_GetAlarmLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlarmLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).GetAlarmLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/GetAlarmLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).GetAlarmLogs(ctx, req.(*GetAlarmLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_CreateAlarmDates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAlarmDatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).CreateAlarmDates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/CreateAlarmDates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).CreateAlarmDates(ctx, req.(*CreateAlarmDatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_GetAlarmDates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlarmDatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).GetAlarmDates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/GetAlarmDates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).GetAlarmDates(ctx, req.(*GetAlarmDatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteAlarmDates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlarmDatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteAlarmDates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteAlarmDates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteAlarmDates(ctx, req.(*DeleteAlarmDatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteAlarm(ctx, req.(*DeleteAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteUserAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteUserAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteUserAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteUserAlarm(ctx, req.(*DeleteUserAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteSensorAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSensorAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteSensorAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteSensorAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteSensorAlarm(ctx, req.(*DeleteSensorAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteZoneAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZoneAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteZoneAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteZoneAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteZoneAlarm(ctx, req.(*DeleteZoneAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_DeleteAlarmDevEui_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlarmDevEuiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).DeleteAlarmDevEui(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/DeleteAlarmDevEui",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).DeleteAlarmDevEui(ctx, req.(*DeleteAlarmDevEuiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_UpdateAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).UpdateAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/UpdateAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).UpdateAlarm(ctx, req.(*UpdateAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_GetAlarmList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlarmListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).GetAlarmList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/GetAlarmList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).GetAlarmList(ctx, req.(*GetAlarmListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_GetOrganizationAlarmList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationAlarmListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).GetOrganizationAlarmList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/GetOrganizationAlarmList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).GetOrganizationAlarmList(ctx, req.(*GetOrganizationAlarmListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_CreateColdRoomRestrictions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateColdRoomRestrictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).CreateColdRoomRestrictions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/CreateColdRoomRestrictions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).CreateColdRoomRestrictions(ctx, req.(*CreateColdRoomRestrictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlarmServerService_CheckAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAlarmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServerServiceServer).CheckAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/als.AlarmServerService/CheckAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServerServiceServer).CheckAlarm(ctx, req.(*CheckAlarmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlarmServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "als.AlarmServerService",
	HandlerType: (*AlarmServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAlarm",
			Handler:    _AlarmServerService_CreateAlarm_Handler,
		},
		{
			MethodName: "GetAlarm",
			Handler:    _AlarmServerService_GetAlarm_Handler,
		},
		{
			MethodName: "CreateAlarmLog",
			Handler:    _AlarmServerService_CreateAlarmLog_Handler,
		},
		{
			MethodName: "GetAlarmLogs",
			Handler:    _AlarmServerService_GetAlarmLogs_Handler,
		},
		{
			MethodName: "CreateAlarmDates",
			Handler:    _AlarmServerService_CreateAlarmDates_Handler,
		},
		{
			MethodName: "GetAlarmDates",
			Handler:    _AlarmServerService_GetAlarmDates_Handler,
		},
		{
			MethodName: "DeleteAlarmDates",
			Handler:    _AlarmServerService_DeleteAlarmDates_Handler,
		},
		{
			MethodName: "DeleteAlarm",
			Handler:    _AlarmServerService_DeleteAlarm_Handler,
		},
		{
			MethodName: "DeleteUserAlarm",
			Handler:    _AlarmServerService_DeleteUserAlarm_Handler,
		},
		{
			MethodName: "DeleteSensorAlarm",
			Handler:    _AlarmServerService_DeleteSensorAlarm_Handler,
		},
		{
			MethodName: "DeleteZoneAlarm",
			Handler:    _AlarmServerService_DeleteZoneAlarm_Handler,
		},
		{
			MethodName: "DeleteAlarmDevEui",
			Handler:    _AlarmServerService_DeleteAlarmDevEui_Handler,
		},
		{
			MethodName: "UpdateAlarm",
			Handler:    _AlarmServerService_UpdateAlarm_Handler,
		},
		{
			MethodName: "GetAlarmList",
			Handler:    _AlarmServerService_GetAlarmList_Handler,
		},
		{
			MethodName: "GetOrganizationAlarmList",
			Handler:    _AlarmServerService_GetOrganizationAlarmList_Handler,
		},
		{
			MethodName: "CreateColdRoomRestrictions",
			Handler:    _AlarmServerService_CreateColdRoomRestrictions_Handler,
		},
		{
			MethodName: "CheckAlarm",
			Handler:    _AlarmServerService_CheckAlarm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "als/als.proto",
}
