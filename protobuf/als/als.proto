syntax = "proto3";

package als;

option go_package = "github.com/ibrahimozekici/chirpstack-api/als";
option java_package = "io.chirpstack.api.als";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


// AlarmServerService provides the Alarm-server API methods.
service AlarmServerService {
    // CreateDevice creates the given device.
    rpc CreateAlarm(CreateAlarmRequest) returns (CreateAlarmResponse) {}
    rpc GetAlarm(GetAlarmRequest) returns (GetAlarmResponse){}
	rpc CreateAlarmLog(CreateAlarmLogRequest) returns (google.protobuf.Empty){}
	rpc GetAlarmLogs(GetAlarmLogsRequest) returns (GetAlarmLogsResponse){}
	rpc CreateAlarmDates(CreateAlarmDatesRequest) returns (CreateAlarmDatesResponse){}
	rpc GetAlarmDates(GetAlarmDatesRequest) returns (GetAlarmDatesResponse) {}
	rpc DeleteAlarmDates(DeleteAlarmDatesRequest) returns (google.protobuf.Empty){}
	rpc DeleteAlarm(DeleteAlarmRequest) returns (google.protobuf.Empty) {}
	rpc DeleteUserAlarm(DeleteUserAlarmRequest) returns (google.protobuf.Empty){}
	rpc DeleteSensorAlarm(DeleteSensorAlarmRequest) returns (google.protobuf.Empty){}
	rpc DeleteZoneAlarm(DeleteZoneAlarmRequest) returns (google.protobuf.Empty){}

	// rpc ListAlarm(ListAlarmRequest) returns (ListAlarmResponse){}
	// rpc UpdateAlarm(UpdateAlarmRequest) returns (GetAlarmResponse){}
	// rpc DeleteAlarm(DeleteAlarmRequest) returns (google.protobuf.Empty){}
	// rpc ListAllOrganizationAlarms(ListOrganizationAlarmRequest) returns (ListOrganizationAlarmResponse){}
	// rpc CreateMultipleAlarms(CreateMultipleAlarmRequest) returns (CreateMultipleAlarmResponse){}
	// rpc DeleteMultipleAlarms(DeleteMultipleAlarmRequest) returns (google.protobuf.Empty){}
	// rpc DeleteSensorAlarms(DeleteMultipleDevAlarmRequest) returns (google.protobuf.Empty){}
	// rpc DeleteZoneAlarms(DeleteMultipleZoneAlarmRequest) returns (google.protobuf.Empty){}
	// rpc CreateAlarmDateTime(CreateAlarmDateTimeRequest) returns (CreateAlarmDateResponse){}
	// rpc CreateAlarmDates(CreateAlarmDateRequest) returns (CreateAlarmDateResponse){}
	// rpc GetAlarmLogs(GetAlarmLogRequest) returns (GetAlarmLogResponse){}
	rpc CreateColdRoomRestrictions(CreateColdRoomRestrictionsRequest) returns (google.protobuf.Empty){}
}

message Alarm{
	int64 id=1;
	string devEui = 2;
	float minTreshold = 3;
	float maxTreshold = 4;
	bool sms = 5;
	bool email = 6;
	bool notification = 7;
	bool temperature = 8;
	bool humadity = 9;
	bool ec = 10;
	bool door = 11;
	bool wLeak = 12;
	int64 userID = 13;
	string ipAddress = 14;
	bool isTimeLimitActive = 15;
	float alarmStartTime = 16;
	float alarmStopTime = 17;
	int64 zoneCategoryID = 18;
	bool isActive = 19;
}

message AlarmDateFilter{
	int64 ID = 1;
	int64 alarmId = 2;
	int64 alarmDay=3;
	float alarmStartTime =4;
	float alarmEndTime = 5;
}

message ColdRoomRestrictions {
    int64 id = 1;
    string devEui = 2;
    int64 alarmID = 3 ;
	int64 defrostTime = 4;
    int64 defrostFrq = 5;
	int64 alarmTime = 6;
}

message AlarmDateTime {
    int64 id = 1;

    int64 alarm_id = 2;

    int64 alarm_day = 3;

    float alarm_start_time = 4;

    float alarm_end_time = 5;
}

// message ListAlarm{
// 	int64 totalCount=1;
// 	repeated Alarm result=2;
// 	repeated AlarmLogs logs=3; 
// }


message CreateAlarmRequest{
    Alarm alarm = 1;
}

message CreateAlarmResponse{
    Alarm alarm = 1;
}

message GetAlarmRequest{
    int64 alarmID = 1;
}

message GetAlarmResponse{
    Alarm alarm = 1;
}

message GetAlarmLogsRequest{
	string devEui = 1;
}

message GetAlarmLogsResponse{
	repeated AlarmLogs respLog = 1;
}


message CreateColdRoomRestrictionsRequest{
	ColdRoomRestrictions coldRes = 1;
}

message CreateAlarmDatesRequest{
	repeated AlarmDateFilter reqFilter = 1;
}

message CreateAlarmDatesResponse{
	repeated AlarmDateTime respDateTime = 1;
}

message GetAlarmDatesRequest{
	int64 alarmId = 1;
}

message GetAlarmDatesResponse{
	repeated AlarmDateTime respDate = 1;
}

message DeleteAlarmRequest{
	string alarmID = 1;
	int64 userID =2;
	string ipAddress = 3;
}

message DeleteUserAlarmRequest{
	repeated int64 userIds = 1;
}

message DeleteSensorAlarmRequest{
	repeated string devEuis = 1;
}

message DeleteZoneAlarmRequest{
	repeated int64 zones = 1;
}

message DeleteAlarmDevEuiRequest{
	string deveui = 1;
	int64 userId = 2;
}

message DeleteAlarmDatesRequest{
	string alarmId = 1;
}

message CreateAlarmLogRequest{
	Alarm alarm = 1;
	int64 userID = 2;
	string ipAddress = 3;
	int64 isDeleted = 4;
}

// message ListAlarmRequest{
// 	int64 limit = 1;
// 	string dev_eui=2;
// 	int64 userId=3;
// }

// message ListAlarmResponse{
// 	int64 limit=1;
// 	string dev_eui=2;
// 	int64 userId=3;
// }

message GetAlarmLogRequest{
	string dev_eui=1;
}

message GetAlarmLogResponse{
	repeated AlarmLogs respLog =1;
}

message AlarmLogs{
	string dev_eui=1;
	float minTreshold=2;
	int64 userId=3;
	string ipAddress=4;
	int64 isDeleted=5;
	bool temperature=6;
	bool humadity=7;
	bool ec=8;
	bool door=9;
	bool w_leak=10;
	bool sms=11;
	float maxTreshold=12;
	google.protobuf.Timestamp submission_date = 13;
}







