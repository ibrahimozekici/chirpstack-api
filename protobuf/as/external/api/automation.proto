syntax = "proto3";

package api;

option go_package = "github.com/ibrahimozekici/chirpstack-api/go/v5/as/external/api";
option java_package = "io.chirpstack.api.as.external.api";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service AutomationService {

    rpc Create(CreateAutomationRequest) returns (CreateAutomationResponse) {
        option(google.api.http) = {
            post: "/api/automation"
            body: "*"
        };
    }

    // Get return the automation
    rpc Get(GetAutomationRequest) returns (GetAutomationResponse) {
        option (google.api.http) = {
            get: "/api/automation/{id}"
        };
    }

    rpc List(ListAutomationRequest) returns (ListAutomationResponse) {
        option (google.api.http) = {
            get: "/api/automation"
        }; 
    }

    // Update updates the automation matching the given automation_id.
    rpc Update(UpdateAutomationRequest) returns (GetAutomationResponse) {
        option (google.api.http) = {
            put: "/api/automation/{automation.id}"
            body: "*"
        };
    }

    // Delete deletes the automation matching the given automation_id.
    rpc Delete(DeleteAutomationRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/automation/{id}"
        };
    }
}

message Automation {

    int64 id = 1;

    string sender_sensor = 2;

    string receiver_sensor = 3;

    string condition = 4;

    string action = 5;

    google.protobuf.Timestamp created_at = 6;

    google.protobuf.Timestamp updated_at = 7;

    int64 user_id = 8;

    int64 organization_id = 9;
}

message CreateAutomationRequest {
    Automation automation = 1;
}

message CreateAutomationResponse {
    Automation automation = 1;
}

message GetAutomationRequest {
    int64 id = 1;
}

message GetAutomationResponse {
    Automation automation = 1;
}

message ListAutomationRequest {
    int64 user_id = 1;
    string dev_eui = 2;
}

message ListAutomationResponse {
    repeated Automation automations = 1;
}

message UpdateAutomationRequest {
    Automation automation = 1;
}

message DeleteAutomationRequest {
    int64 id = 1;
}